//############################################################################
//
//				TOWN
//
//############################################################################


//TAGS da region de Town
//TAG.TOWN_TYPE
//	1	Reino
//	2	Cidade
//	3	Vila
//TAG.TOWN_RACE
//	Elfo
//	Anao
//	Humano
//	Drow
//	Orc
//	Misc
//TAG.TOWN_CAPITAL		AREADEF da área que comanda as leis.
//TAG.TOWN_TRESURE		Quantidade de mc que a town possue.
//TAG.TOWN_RACE_FORBIDDEN	Raças separadas por ;
//TAG.TOWN_RACE_FRIEND		Raças separadas por ;
//TAG.TOWN_UID_FORBIDDEN	UIDs sepadaras por ;
//TAG.TOWN_UID_FRIEND		UIDs separadas por ;
//TAG.TOWN_MASTER		UID do mestre da Town
//TAG.TOWN_COUNSELORS		UIDs dos conselheiros da Town separadas por ;
//TAG.TOWN_GUARD		DEFNAME do guarda da Town
//TAG.TOWN_CHPRICE		Preço do tile² do terreno para construção. Proibido contruir se empty

[DEFNAME TOWN]
TOWN_TYPE_KINGDOM	1
TOWN_TYPE_CITY		2
TOWN_TYPE_VILLAGE	3

[DEFNAME guards_task]
//TAG.TASK:
GUARD_TASK_WANDER	0
GAURD_TASK_WARN		1
GUARD_TASK_ATTACK	2
GUARD_TASK_GO		3
GUARD_TASK_FOLLOW	4
GUARD_TASK_GUARD	5
GUARD_TASK_PATROL	6
GUARD_TASK_DISMISSING	7
GUARD_TASK_REMOVE	8

GUARD_WARN_WARMODE	1
GUARD_WARN_WEAPON	2
GUARD_WARN_FORBIDE	3

//****************************************************************************
//****************************************************************************
//
//				MECANISMOS DA TOWN
//
//****************************************************************************
//****************************************************************************

//****************************************************************************
//					ITEMDEFS
//****************************************************************************
[ITEMDEF I_BOX_TOWN_TRESURE]
ID=i_box_brass
TYPE=t_container
NAME=Tesouro do governo

on=@ClientToolTip
f_sendTooltip <name>, <TOWN_GET_TRESURE>
return 1

on=@dclick
IF (<findcont.0>)
 timerd=1
 src.timerf 1,dclick,<uid>
 src.sysmessagegreen Calculando tesouro
 return 1
ENDIF
IF (<region.tag0.TOWN_TRESURE>)
 CALL TOWN_GET_TRESURE
 IF (<LOCAL.g>)
  serv.newitem i_gold
  new.amount=<LOCAL.g>
  new.cont=<UID>
 ENDIF
 IF (<LOCAL.s>)
  serv.newitem i_coin_silver
  new.amount=<LOCAL.s>
  new.cont=<UID>
 ENDIF
 IF (<LOCAL.c>)
  serv.newitem i_coin_copper
  new.amount=<LOCAL.c>
  new.cont=<UID>
 ENDIF
 region.tag.town_tresure=
 timer=60
 update
ENDIF

on=@timer
FORCONT <UID>
 if (<baseid>==i_gold)
  region.tag0.town_tresure += <eval <amount>*100>
 elif (<baseid>==i_coin_silver)
  region.tag0.town_tresure += <eval <amount>*10>
 elif (<baseid>==i_coin_copper)
  region.tag0.town_tresure += <amount>
 endif
endfor
empty
update
return 1

//****************************************************************************
//					FUNCTIONS
//****************************************************************************

[FUNCTION town]
//Configura town
if (STRMATCH(*world*,<region.defname>))
 sysmessagered O mundo eh selvagem...
 return 1
elif (!<region.tag0.town_type>)
 MENU m_new_town
else
 dialog d_town
endif

[FUNCTION TOWN_GET_TRESURE]
//Retorna uma string representando o tesouro de uma town.
LOCAL.c=<region.tag0.town_tresure>
WHILE (<LOCAL.c> > 100)
 LOCAL.g += 1
 LOCAL.c -= 100
ENDDO
WHILE (<LOCAL.c> > 10)
 LOCAL.s += 1
 LOCAL.c -= 10
ENDDO
return <dLOCAL.g>mo <dLOCAL.s>mp <dLOCAL.c>mc

[FUNCTION TOWN_RESOLV_DEMENCES]
//Seta LOCAL.KINGDOM, LOCAL.CITY e LOCAL.VILLAGE pro gump d_town
IF (<region.tag.TOWN_TYPE>==TOWN_TYPE_KINGDOM)
 LOCAL.Kingdom=Autonomo
 call TOWN_RESOLV_CITIES <EXPLODE ;,<region.tag.town_demences>>
 call TOWN_RESOLV_VILLAGES <EXPLODE ;,<region.tag.town_demences>> 
ELIF (<region.tag.TOWN_TYPE>==TOWN_TYPE_CITY)
 IF (<serv.resources.<region.tag.TOWN_CAPITAL>>)
  LOCAL.KINGDOM=<serv.resources.<region.tag.TOWN_CAPITAL>.name>
 ELSE
  LOCAL.KINGDOM=Autonomo
 ENDIF
 LOCAL.CITY=<region.name>
 CALL TOWN_RESOLV_VILLAGES <EXPLODE ;,<region.tag.town_demences>> 
ENDIF

[FUNCTION TOWN_RESOLV_CITIES]
FOR i 1 <argv>
 IF (<serv.resources.<argv[<LOCAL.i>]>.tag.TOWN_TYPE>==TOWN_TYPE_CITY)
  LOCAL.CITY += 1
 ENDIF
ENDFOR

[FUNCTION TOWN_RESOLV_VILLAGES]
FOR i 1 <argv>
 IF (<serv.resources.<argv[<LOCAL.i>]>.tag.TOWN_TYPE>==TOWN_TYPE_VILLAGE)
  LOCAL.VILLAGE += 1 
 ENDIF
ENDFOR

[MENU m_new_town]
<region.name> nao eh uma vila. Que vila faremos?
on=0 Reino
region.tag.town_type=<DEF.TOWN_TYPE_KINGDOM>
MENU m_NEW_TOWN_RACE

on=0 Cidade
region.tag.town_type=<DEF.TOWN_TYPE_CITY>
MENU m_NEW_TOWN_RACE

on=0 Vila
region.tag.town_type=<DEF.TOWN_TYPE_VILLAGE>
MENU m_NEW_TOWN_RACE

[MENU m_NEW_TOWN_RACE]
Que habitantes tera <region.name>?
on=0 Elfo
region.TAG.TOWN_RACE=Elfo
promptconsole new_town_capital Digite o DEFNAME da regiao que manda nesta town. Se for autonoma, rasure.

on=0 Anao
region.TAG.TOWN_RACE=Anao
promptconsole new_town_capital Digite o DEFNAME da regiao que manda nesta town. Se for autonoma, rasure.

on=0 Humano
region.TAG.TOWN_RACE=Humano
promptconsole new_town_capital Digite o DEFNAME da regiao que manda nesta town. Se for autonoma, rasure.

on=0 Drow
region.TAG.TOWN_RACE=Drow
promptconsole new_town_capital Digite o DEFNAME da regiao que manda nesta town. Se for autonoma, rasure.

on=0 Orc
region.TAG.TOWN_RACE=Orc
promptconsole new_town_capital Digite o DEFNAME da regiao que manda nesta town. Se for autonoma, rasure.

on=0 Misto
region.TAG.TOWN_RACE=Misc
promptconsole new_town_capital Digite o DEFNAME da regiao que manda nesta town. Se for autonoma, rasure.

[FUNCTION new_town_capital]
IF (<serv.resources.<args>.tag0.TOWN_TYPE>)
 region.tag.town_capital=<args>
 if (<IsEmpty <serv.resources.<args>.tag.TOWN_DEMENCES>>)
  serv.resources.<args>.tag.TOWN_DEMENCES=<region.defname>
 else
  serv.resources.<args>.tag.TOWN_DEMENCES .= ;<region.defname>
 endif 
ELSE
 region.tag.town_capital=<region.defname>
endif
region.tag.TOWN_MASTER=<UID>
sysmessagegreen Sua town foi configurada com sucesso! A capital eh <serv.resources.<region.tag.town_capital>.name>.

//*****************************************************************************
// Porteira Elfa
//*****************************************************************************

[CHARDEF c_e_town_f]
ID=c_woman
NAME=#NAMES_HUMANFEMALE
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP,t_eerie_stuff


TSPEECH=jobTOWNDoor

ON=@Create
COLOR=0412
STR={71 85}
DEX={66 80}
INT={66 80}

tag.raca Elfo

SWORDSMANSHIP={15.0 38.0}
ITEMID={50.0 70.0}
TACTICS={15.0 38.0}

NPC=BRAIN_HUMAN
NEED=i_gold

ON=@NPCRestock
ITEM=i_hair_long
COLOR=035
ITEM=i_shirt_fancy
COLOR=colors_green
ITEM=i_skirt_long
COLOR=colors_yellow

CATEGORY=MYT - Town
SUBSECTION=Porteiros
DESCRIPTION=Porteiro (Elfa)

[SPEECH jobTOWNdoor]
on=*vigie*porta
IF (<src.TOWN_CHECK_SPK_PRIVS <UID>, 2>)
 SAY Que porta quer que eu vigie?
 targetf TOWN_ADD_DOOR <UID>
ENDIF
return 1

on=*pare*vigiar*porta
IF (<src.TOWN_CHECK_SPK_PRIVS <UID>, 2>)
 SAY Que porta quer que eu deixe de vigiar?
 targetf TOWN_REM_DOOR <UID>
ENDIF
return 1

on=*abra*porta*
on=*abra*portao*
on=*abra*portal*
on=*abra*portoes*
on=*abra*portais*
IF (<src.TOWN_CHECK_SPK_PRIVS <UID>, 1>)
 TOWN_OPEN_DOOR
ENDIF
return 1

on=*feche*porta*
on=*feche*portao*
on=*feche*portal*
on=*feche*portoes*
on=*feche*portais*
IF (<src.TOWN_CHECK_SPK_PRIVS <UID>, 1>)
 TOWN_CLOSE_DOOR
ENDIF
return 1

[FUNCTION TOWN_ADD_DOOR]
OBJ=<argv[0]>
say Esta aqui.
if (<argo.type> != t_door) && (<argo.type> != t_door_locked) && (<argo.type> != t_portculis)
 obj.timerf 1,say,Isso nao me parece com uma porta <sex senhor/senhora>.
 return 1
endif
IF (STRMATCH(*<argo.uid>*,<obj.tag.TOWN_DOORS>)
 Obj.timerf 1,say,Esta porta ja esta sendo figiada.
 return 1
endif
obj.timerf 1,say,Muito bem <sex senhor/senhora>. Guardarei para que seja segura.
obj.tag.TOWN_DOORS .=;<argo.uid>

[FUNCTION TOWN_REM_DOOR]
OBJ=<argv[0]>
say Esta aqui.
if (<argo.type> != t_door) && (<argo.type> != t_door_locked) && (<argo.type> != t_portculis)
 obj.timerf 1,say,Isso nao me parece com uma porta <sex senhor/senhora>.
 return 1
endif
IF !(STRMATCH(*<argo.uid>*,<obj.tag.TOWN_DOORS>)
 Obj.timerf 1,say,Mas eu nao estou vigiando esta porta...
 return 1
endif
obj.timerf 1,say,Certo <sex senhor/senhora>. Nao guardarei mais esta porta.
obj.tag.TOWN_DOORS =<f_RemoveList <argo.uid>,<obj.tag.TOWN_DOORS>>

[FUNCTION TOWN_OPEN_DOOR]
LOCAL.doors=<EXPLODE ;,<tag.TOWN_DOORS>>
LOCAL.doors=<STRSUB 1 <eval STRLEN(<LOCAL.doors>)> <LOCAL.doors>>
_TOWN_OPEN_DOOR <LOCAL.doors>

[FUNCTION _TOWN_OPEN_DOOR]
for i 0 <eval <argv>-1>
 IF (<UID.<argv[<LOCAL.i>]>.type> != t_portculis)
  if (!<UID.<argv[<LOCAL.i>]>.tag0.open>)
   UID.<argv[<LOCAL.i>]>.timerd=1
   UID.<argv[<LOCAL.i>]>.tag.open=1
   UID.<argv[<LOCAL.i>]>.timerf 1,timer,-1
  endif
 ELSE
  IF (!<UID.<argv[<LOCAL.i>]>.moreX>) && (!<UID.<argv[<LOCAL.i>]>.morey>)
   //Esta fechada E nao esta em uso
   UID.<argv[<LOCAL.i>]>.f_portculis
  ENDIF
 ENDIF
endfor

[FUNCTION TOWN_CLOSE_DOOR]
LOCAL.doors=<EXPLODE ;,<tag.TOWN_DOORS>>
LOCAL.doors=<STRSUB 1 <eval STRLEN(<LOCAL.doors>)> <LOCAL.doors>>
_TOWN_CLOSE_DOOR <LOCAL.doors>

[FUNCTION _TOWN_CLOSE_DOOR]
for i 0 <eval <argv>-1>
 IF (<UID.<argv[<LOCAL.i>]>.type> != t_portculis)
  if (<UID.<argv[<LOCAL.i>]>.tag0.open>)
   UID.<argv[<LOCAL.i>]>.timerd=1
   UID.<argv[<LOCAL.i>]>.tag.open=
  endif
 ELSE
  IF (<UID.<argv[<LOCAL.i>]>.moreX>) && (!<UID.<argv[<LOCAL.i>]>.morey>)
   //Esta aberta E nao esta em uso
   UID.<argv[<LOCAL.i>]>.f_portculis
  ENDIF
 ENDIF
endfor

[FUNCTION TOWN_CHECK_SPK_PRIVS]
obj=<argv[0]>
IF (<ISGM>)
 RETURN 1
ENDIF
IF (<argv1>==2)
 IF !(STRMATCH(*<UID>*,<obj.region.tag.TAG.TOWN_COUNCELORS><obj.region.tag.TAG.TOWN_MASTER>))
  obj.timerf 1,say,Esta ordem so pode ser dada pelo conselho de <obj.region.name>.
  return 0
 ENDIF
ELIF (<argv1>==3)
 IF !(STRMATCH(*<UID>*,<obj.region.tag.TAG.TOWN_MASTER>))  
  obj.timerf 1,say,Esta ordem so pode ser dada pelo responsavel de <obj.region.name>.
  return 0
 ENDIF
ENDIF
IF (<tag0.comcapuz>)
 obj.timerf 1,say,E quem eh voce? Nao posso ver seu rosto!
 return 0
ELIF (STRMATCH(*<UID>*,<obj.region.tag.TAG.TOWN_UID_FORBIDDEN>))
 obj.timerf 1,say,Voce esta <sex proibido/proibida> de entrar em <obj.region.name>. Va embora.
 return 0
ELIF (STRMATCH(*<UID>*,<obj.region.tag.TAG.TOWN_UID_FRIEND>))
 return 1
ELIF (STRMATCH(*<tag.raca>*,<obj.region.tag.TAG.TOWN_RACE_FORBIDDEN>))
 obj.timerf 1,say,Nenhum <tag.raca> deve entrar em <obj.region.name>. Va embora.
 return 0
endif
RETURN 1




//*****************************************************************************
//*****************************************************************************
//
//					GUARDAS
//
//*****************************************************************************
//*****************************************************************************

[FUNCTION TOWN_BUY_GUARD]


[FUNCTION GUARD_LEVEL]
//ARGN=Iniciar
IF (<tag0.level>==3)
 return 0
ELIF (<tag0.level>==2) && (<FAME> < 5000)
 return 0
ELIF (<tag0.level>==1) && (<FAME> < 2500)
 return 0
ELIF (!<tag0.level>) && (<FAME> < 1000) && (<FAME> > 0)
 return 0
ELIF (!<FAME>)
 FAME=1
ELSE
 tag0.level += 1
ENDIF

for layer 1 24
 if (<LOCAL.layer>!= LAYER_HAIR) && (<LOCAL.layer>!= LAYER_BEARD) && (<LOCAL.layer>!= 21)
  findlayer.<LOCAL.layer>.remove
 ENDIF
endfor
DOSWITCH <tag0.level>
 take_item i_pescoco_courom
 take_item i_pescoco_anel
 take_item i_pescoco_malha
 take_item i_pescoco_placa
ENDDO

DOSWITCH <tag0.level>
 take_item i_braco_courom
 take_item i_braco_anel
 take_item i_braco_malha
 take_item i_braco_placa
ENDDO

DOSWITCH <tag0.level>
 take_item i_luva_courom
 take_item i_luva_anel
 take_item i_luva_malha
 take_item i_luva_placa
ENDDO

DOSWITCH <tag0.level>
 take_item i_peito_courom
 take_item i_peito_anel
 take_item i_peito_malha
 take_item i_peito_placa
ENDDO

DOSWITCH <tag0.level>
 take_item i_perna_courom
 take_item i_perna_anel
 take_item i_perna_malha
 take_item i_perna_placa
ENDDO

DOSWITCH <tag0.level>
 take_item i_doublet
 take_item i_sash
 take_item i_cape
 take_item i_cape
ENDDO
new.color=<MyTownColor>

if (<tag0.level> == 3)
 take_item i_sash
 new.color=<MyTownColor>
endif

take_weapon

take_item i_boots_calf

[FUNCTION take_item]
serv.newitem <args>
equip <new.uid>

[FUNCTION take_weapon]
for i 0 53
 LOCAL.skill=<skillbest.<dLOCAL.i>>
 IF (<LOCAL.skill>==31)
  DOSWITCH <TAG0.level>
   take_item i_bow
   take_item i_bow_long
   take_item i_bow_composite
   take_item i_bow_elven
  ENDDO
  new.morey 600
  equip <new.uid>
  take_item i_arrow
  new.amount 150
  return 1
 ELIF (<LOCAL.skill>==42)
  DOSWITCH <TAG0.level>
   takeitem random_faca
   takeitem i_lanca_curta
   takeitem i_garfo_guerra
   takeitem i_lanca
  ENDDO
  return 1
 ELIF (<LOCAL.skill>==41)
  take_item i_random_maca
  return 1
 ELIF (<LOCAL.skill>==40)
  take_item i_random_espada
  return 1
 ENDIF
endfor



[FUNCTION MyTownColor]
//Retorna a cor da town do NPC
if (<IsEmpty <tag.town>>)
 return colors_all
elif (<IsEmpty <serv.resources.<tag.town>.tag.town_color>>)
 return colors_all
endif
return <serv.resources.<tag.town>.tag.town_color>


//*****************************************************************************
// guarda anão
//*****************************************************************************
[CHARDEF c_a_guard]
ID=c_man
NAME=#NAMES_HUMANMALE
ICON=i_pet_MAN
CAN=MT_EQUIP|MT_WALK|MT_RUN|MT_USEHANDS
RESOURCES=i_flesh_head, i_flesh_torso, i_flesh_right_arm, i_flesh_left_arm, i_flesh_left_leg, i_flesh_right_leg, i_blood_2
FOODTYPE=100 t_food, t_fruit
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP,t_eerie_stuff
BLOODCOLOR=0
SOUND=snd_human_moomph01
TEVENTS=e_guard_town
TEVENTS=e_PvM
TEVENTS=e_combat 

TSPEECH=jobTOWNGuard

CATEGORY=MYT - Town
SUBSECTION=Guardas
DESCRIPTION=Guarda (Anao)

ON=@Create
NPC=brain_human
COLOR=colors_skin
KARMA=5000

speechcolor=colors_all

MACEFIGHTING=100.0
TACTICS=100.0
FENCING=100.0

STR=100
DEX=110
INT=50
MAXHITS=200

ITEM=i_kryss
ITEM={i_maca 1 i_maca_guerra 1}
ITEMNEWBIE=i_peito_malha
ITEMNEWBIE=i_braco_malha
ITEMNEWBIE=i_perna_malha
ITEMNEWBIE=i_luva_malha
ITEMNEWBIE=i_pescoco_malha
ITEMNEWBIE={i_escudo_batalham 1 i_escudo_madeira 1 i_broquel 1}
ITEM=i_coin_copper,{3 10}
ITEM=i_boots_calf
ITEMNEWBIE={i_hair_long 1 i_hair_2_pigtails 1}
COLOR=colors_brown
ITEMNEWBIE={i_beard_long_med 1 i_beard_long}
COLOR=match_hair
ITEM=i_ribs_cooked
amount=12


[SPEECH jobTOWNGuard]
on=*pare*
GUARD_STOP
say Sim, <src.sex senhor/senhora>.

on=*venha*
on=*vamos*
on=*ande*
say Sim, <src.sex senhor/senhora>.
GUARD_FOLLOW

on=*va*
say Ate aonde, <src.sex senhor/senhora>?
src.targetfg GUARD_GO <uid>,1

on=*ataque*
on=*atacar*
on=*mate*
say Qual eh o meu alvo, <src.sex senhor/senhora>?
src.targetf GUARD_ATTACK <UID>

[EVENTS e_guard_town]
on=@Kill
FAME += <eval <argo.fame>/20>
else
IF (<argo.karma> > 0)
 KARMA += <eval <argo.KARMA>/20>
else
 KARMA -= <eval <argo.KARMA>/20>
endif

on=@Hunger
if (<food> < 50)
 if (!<GUARD_FOOD>) && (<food> <= 15)
  GUARD_BUY
 endif
endif

on=@NPCActFight
argn2=1000

[FUNCTION GUARD_STOP]
tag.task=GUARD_TASK_WANDER
act=
actp=
forcharlayer 30
 remove
endfor
flags=<flags>~&020
update
action=065

[FUNCTION GUARD_FOLLOW]
tag.oldtask=<tag0.task>
tag.task.GUARD_TASK_FOLLOW
act=<src.uid>
action=064

[FUNCTION GUARD_ATTACK]
ref1=<argv[0]>
ref1.tag.oldtask=<tag0.task>
ref1.tag.task.GUARD_TASK_ATTACK
ref1.attack <argo>

[FUNCTION GUARD_GO]
//ARGV0=UID do guarda
//ARGV1=Se responde por voz ou não.
say <argv[0]> e <argv[1]>
ref1=<argv[0]>
ref1.actp=<targp>
ref1.action=066
ref1.tag.task=GUARD_TASK_GO
if (0<argv[1]>)
 ref1.say Agora mesmo, <sex senhor/senhora>
endif

[FUNCTION say_action]
say <action>
say <actp>
say <act.name>
//timerf 1,say_action

[FUNCTION GUARD_FOOD]
LOCAL.food=<findtype t_food>
if (<LOCAL.food>)
 anim 022
 SFX 03b
 emotegreen comendo <UID.<LOCAL.FOOD>.name>
 food += <R20,50>
 uid.<local.food>.decrement
 return 1
endif
return 0

[FUNCTION GUARD_BUY]
if (<restest 5 i_coin_copper>)
 LOCAL.item={i_ribs_cooked 1 i_chicken_leg 1 i_lamb_leg 1 i_fish_cut_cooked 1}
 consume 5 i_coin_copper
 serv.newitem <LOCAL.item>
 new.amount=<R5,10>
 new.cont=<uid>
 f_GMLog [GUARDAS] <name> compra <new.name>.
endif

[DIALOG d_town]
100,75
page 0
resizepic 50 31 2620 500 400
checkertrans 55 38 490 385
gumppic 0 0 10400
gumppic 0 160 10401
gumppic 0 356 10402
gumppic 518 -2 10410
gumppic 518 160 10411
gumppic 518 356 10412
gumppic 225 45 2501
dtext 276 45 26 <region.name>
resizepic 92 88 2620 416 70
dtext 108 96 66 Responsavel:
dtext 192 96 4 <uid.<region.tag.town_master>.tag.name>
dtext 108 112 66 Tesouro:
dtext 168 112 4 <TOWN_GET_TRESURE>
dtext 328 112 66 Funcionarios:
dtext 416 112 4 (funcionarios)
call TOWN_RESOLV_DEMENCES
dtext 108 128 66 Reino:
dtext 152 128 4 <LOCAL.KINGDOM>
dtext 224 128 66 Cidades:
dtext 280 128 4 <QVAL <IsNum <LOCAL.CITY>>?<dLOCAL.CITY>:<LOCAL.CITY>>
dtext 376 128 66 Vilas:
dtext 416 128 4 <QVAL <LOCAL.VILLAGE>?<dLOCAL.CITY>:Nenhuma>

[DIALOG d_town text]
<region.name>
Responsavel:
<uid.<region.tag.town_master>.tag.name>
Tesouro:
(tesouro)
Funcionarios:
(funcionarios)
Reino:
(reino)
Cidades:
(cidades)
Vilas:
(vilas)

[DIALOG d_town button]
on=0