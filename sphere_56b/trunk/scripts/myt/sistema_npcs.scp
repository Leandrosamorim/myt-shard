/The following written by Lerkur (lerkur@trigun.com)
//
//DESIRES=i_monster_marker
//TEVENTS=e_marker_init

[DEFNAME NPC_AI_System_Options]
npcai_opt_customcombat 00 //Use Kell's custom combat system (Boolean)
npcai_opt_customresist 00 //Use Swindler's custom magic resistance system (Boolean)
npcai_opt_customhousemenu 00 //Use Swindler's House Menu system (Boolean)
npcai_opt_npclooting 00 //Use NPC Looting system (Boolean)
npcai_opt_equipbestarmr 00 //Causes an NPC to equip the best armor they have (Boolean)
npcai_opt_equipbestwpn 00 //Causes an NPC to equip the best weapon they have (Boolean)
npcai_opt_reequip 00 //Use Unequip/Reequip for all NPCs on creation (Boolean)
npcai_opt_bladespirits 03c //Average timer on summoned blade spirits (Integer)
npcai_opt_energyvortex 01e //Average timer on summoned energy vortexes (Integer)
npcai_opt_layeggsincorpse 00 //Allows for some NPCs to spawn more of their kind from corpses (Boolean)
npcai_opt_eatcorpse 00 //Allows for some NPCs to eat corpses to gain power (Boolean)
npcai_opt_fixdebuffs 00 //Causes debuffs to lower HITS STAM and MANA (Boolean)
npcai_opt_chasewants 00 //Causes NPC's to move toward any items they want (Boolean)
npcai_opt_skillgain 00 //Uses custom skill gain for NPC's (Boolean)
npcai_opt_summonsasmaster 00 //Sets a summoned creatures race and karma to the same as its master (Boolean)
npcai_opt_lowbodycount 01 //Keeps the NPC body count low (Boolean)

[DEFNAME Race_Flags]
racef_goodhuman 000000001 //Human, Good
racef_monster 000000002 //Monster Type (Non Specific)
racef_terathan 000000004 //Terathan
racef_ophidian 000000008 //Ophidian
racef_orc 000000010 //Orc
racef_ettin 000000020 //Ettin
racef_woodelf 000000040 //Elf, Wood
racef_frostelf 000000080 //Elf, Frost
racef_highelf 000000100 //Elf, High
racef_darkelf 000000200 //Elf, Dark
racef_undead 000000400 //Undead
racef_animal 000000800 //Animals
racef_badhuman 000001000 //Human, Evil
racef_dragon 000002000 //Dragon Race
racef_demon 000004000 //Demon Race
racef_goblin 000008000 //Goblin Race
racef_scorpion 000010000 //Scorpion Race
racef_lizardman 000020000 //Lizardman Race
racef_ratman 000040000 //Ratman Race
racef_cyclops 000080000 //Cyclops Race
racef_ogre 000100000 //Ogre Race
racef_troll 000200000 //Troll Race
racef_carnivoros 000400000 // Carnivoros 

[ITEMDEF 01f13]
DEFNAME=i_monster_marker
NAME=Monster Marker
TYPE=t_script
LAYER=layer_special
CATEGORY=Provisions - GM Items
SUBSECTION=Special Items
DESCRIPTION=Monster Marker

ON=@Create
ATTR=04002
TIMERD=1

ON=@Timer
IF ( 0<LINK.HITS> ) //Make sure link exists and is alive
P=<LINK.P>
IF ( ((0<LINK.TAG.NPCAI.ONPC>)==(0d)) )
IF ( (<LINK.FLAGS>&statf_war) && !(<EVAL {0 2}>) )
LINK.ACTION=06f
ENDIF
ENDIF
Z=(-70) //Set Z to a level that the player cannot see
REMOVEFROMVIEW
TIMER=5 //Reset the timer so it will fire again
RETURN 1 //Do not decay
ELSE
RETURN 0 //Do decay
ENDIF

[FUNCTION SetTerathan]
TAG.NPCAI.Race=<EVAL racef_terathan>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=0fffffffb //All races except Terathans
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_terathan_drone) )
TAG.NPCAI.LayEggsInCorpse=1
TAG.NPCAI.LEIC.Amount=1
TAG.NPCAI.LEIC.TotalQuantity=1
TAG.NPCAI.LEIC.DieOnHatch=1
TAG.NPCAI.LEIC.Graphic=010d9
TAG.NPCAI.LEIC.Color=00
TAG.NPCAI.LEIC.Message=* botando ovos *
TAG.NPCAI.LEIC.Type1=c_terathan_warrior
TAG.NPCAI.LEIC.Weight1=5
TAG.NPCAI.LEIC.Type2=c_terathan_warrior
TAG.NPCAI.LEIC.Weight2=2
TAG.NPCAI.LEIC.Type3=c_terathan_warrior
TAG.NPCAI.LEIC.Weight3=2
TAG.NPCAI.LEIC.Type4=c_m_terathan_avenger
TAG.NPCAI.LEIC.Weight4=2
TAG.NPCAI.LEIC.Type5=c_terathan_matriarch
TAG.NPCAI.LEIC.Weight5=1
TAG.NPCAI.LEIC.GestationTime=30
TAG.NPCAI.Rank=(-1)
ENDIF
IF ( (<ID>==c_m_terathan_avenger) )
TAG.NPCAI.EatCorpse=1
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_terathan_matriarch) )
TAG.NPCAI.LayEggsInCorpse=1
TAG.NPCAI.LEIC.Amount=6
TAG.NPCAI.LEIC.TotalQuantity=(-1)
TAG.NPCAI.LEIC.DieOnHatch=0
TAG.NPCAI.LEIC.Graphic=010da
TAG.NPCAI.LEIC.Color=00
TAG.NPCAI.LEIC.Message=laying
TAG.NPCAI.LEIC.Type1=c_terathan_drone
TAG.NPCAI.LEIC.Weight1=5
TAG.NPCAI.LEIC.Type2=c_terathan_drone
TAG.NPCAI.LEIC.Weight2=1
TAG.NPCAI.LEIC.Type3=c_terathan_drone
TAG.NPCAI.LEIC.Weight3=1
TAG.NPCAI.LEIC.Type4=c_terathan_drone
TAG.NPCAI.LEIC.Weight4=1
TAG.NPCAI.LEIC.Type5=c_terathan_drone
TAG.NPCAI.LEIC.Weight5=1
TAG.NPCAI.LEIC.GestationTime=30
TAG.NPCAI.FighterType=2
TAG.NPCAI.Rank=2
ENDIF

[FUNCTION SetOphidian]
TAG.NPCAI.Race=<EVAL racef_ophidian>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_monster>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ettin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_badhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goblin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_lizardman>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_dragon>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_woodelf>)
TAG.NPCAI.AttackKarma=0
TAG.NPCAI.LooterType=1
TAG.NPCAI.ImmuneInfight=1
TAG.NPCAI.EatCorpse=1
IF ( (<ID>==c_m_ophidian_knight) || (<ID>==c_m_ophidian_archmage) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<SRC.ID>==c_ophidian_queen) )
TAG.NPCAI.LayEggsInCorpse=1
TAG.NPCAI.LEIC.Amount=1
TAG.NPCAI.LEIC.TotalQuantity=(-1)
TAG.NPCAI.LEIC.DieOnHatch=0
TAG.NPCAI.LEIC.Graphic=010d9
TAG.NPCAI.LEIC.Color=041c
TAG.NPCAI.LEIC.Message=* colocando ovos *
TAG.NPCAI.LEIC.Type1=c_ophidian_warrior
TAG.NPCAI.LEIC.Weight1=5
TAG.NPCAI.LEIC.Type2=c_ophidian_mage
TAG.NPCAI.LEIC.Weight2=3
TAG.NPCAI.LEIC.Type3=c_ophidian_shaman
TAG.NPCAI.LEIC.Weight3=3
TAG.NPCAI.LEIC.Type4=c_m_ophidian_archmage
TAG.NPCAI.LEIC.Weight4=2
TAG.NPCAI.LEIC.Type5=c_ophidian_queen
TAG.NPCAI.LEIC.Weight5=2
TAG.NPCAI.LEIC.GestationTime=60
TAG.NPCAI.Rank=2
TAG.NPCAI.FighterType=3
ENDIF
IF ( (<SRC.ID>==c_ophidian_shaman) )
TAG.NPCAI.FighterType=2
ENDIF
IF ( (<ID>==c_ophidian_mage) || (<ID>==c_m_ophidian_archmage) || (<ID>==c_ophidian_warrior) ||| (<ID>==c_ophidian_knight) )
TAG.NPCAI.FighterType=3
ENDIF

[FUNCTION SetOrc]
TAG.NPCAI.Race=<EVAL racef_orc>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_animal>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ettin>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_darkelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goblin>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_m_orc_captain) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_orc_lord) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_m_orc_mage) )
TAG.NPCAI.FighterType=1
ENDIF
IF ( (<ID>==c_m_orc_shaman) )
TAG.NPCAI.FighterType=2
ENDIF

[FUNCTION SetEttin]
TAG.NPCAI.Race=<EVAL racef_ettin>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ettin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_orc>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goblin>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
IF ( (<ID>==c_m_ettin_lord) )
TAG.NPCAI.Rank=1
ENDIF

[FUNCTION SetWoodElf]
TAG.NPCAI.Race=<EVAL racef_woodelf>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_monster>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goblin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
//TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_highelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_animal>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_dragon>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ophidian>)
TAG.NPCAI.AttackKarma=0
TAG.NPCAI.LooterType=1
TAG.NPCAI.ResistInfight=1
IF ( (<ID>==c_h_woodelf_elite_ranger) || (<ID>==c_h_woodelf_elite_warrior) || (<ID>==c_h_woodelf_hunter) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_h_woodelf_archer) )
TAG.NPCAI.FighterType=1
ENDIF
IF ( (<ID>==c_h_woodelf_druid) )
TAG.NPCAI.FighterType=2
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==c_h_woodelf_ranger) || (<ID>==c_h_woodelf_elite_ranger) )
TAG.NPCAI.FighterType=3
ENDIF

[FUNCTION SetFrostElf]
TAG.NPCAI.Race=<EVAL racef_frostelf>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ettin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_animal>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_darkelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_badhuman>)
TAG.NPCAI.AttackKarma=0
TAG.NPCAI.LooterType=1
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_h_frostelf_shaman) )
TAG.NPCAI.Rank=1
TAG.NPCAI.FighterType=2
ENDIF
IF ( (<ID>==c_h_frostelf_chief) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_h_frostelf_archer) )
TAG.NPCAI.FighterType=1
ENDIF

[FUNCTION SetHighElf]
TAG.NPCAI.Race=<EVAL racef_highelf>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_monster>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_badhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goblin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
//TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_woodelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_dragon>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=0
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_h_highelf_mage) || (<ID>==c_h_highelf_knight) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_h_highelf_colonel) )
TAG.NPCAI.Rank=3
ENDIF
IF ( (<ID>==c_h_highelf_general) )
TAG.NPCAI.Rank=5
ENDIF
IF ( (<ID>==c_h_highelf_captain) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_h_highelf_archmage) )
TAG.NPCAI.LooterType=1
TAG.NPCAI.FighterType=4
TAG.NPCAI.Rank=5
ENDIF
IF ( (<ID>==c_h_highelf_archer) )
TAG.NPCAI.FighterType=1
ENDIF
IF ( (<ID>==c_h_highelf_mage) )
TAG.NPCAI.FighterType=4
ENDIF
IF ( (<ID>==c_h_highelf_priest) )
TAG.NPCAI.FighterType=2
ENDIF

[FUNCTION SetDarkElf]
TAG.NPCAI.Race=<EVAL racef_darkelf>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_frostelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_demon>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goblin>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_darkelf_war_sword) || (<ID>==c_darkelf_war_axe) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_darkelf_warlord) )
TAG.NPCAI.Rank=2
ENDIF

[FUNCTION SetUndead]
TAG.NPCAI.Race=<EVAL racef_undead>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_monster>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ettin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_animal>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goblin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=0
IF ( (<ID>==c_liche) || (<ID>==c_m_skeleton_knight) || (<ID>==c_m_skeleton_mage) || (<ID>==c_m_ghost)  )  
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_m_ghoul) ) 
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_m_liche_lord) || (<ID>==c_skeletonking) )
TAG.NPCAI.Rank=3
ENDIF
IF ( (<ID>==c_m_grim_reaper) || (<ID>==c_m_banshi) )
TAG.NPCAI.Rank=5
ENDIF


[FUNCTION SetAnimal]
TAG.NPCAI.Race=<EVAL racef_animal>
//TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_animal>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=0
TAG.NPCAI.Rank=(-1)
TAG.NPCAI.AttackKarma=0
IF ( (<ID>==c_wisp) )
TAG.NPCAI.Rank=1
ENDIF

[FUNCTION SetDragon]
TAG.NPCAI.Race=<EVAL racef_dragon>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_dragon>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_woodelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_highelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ophidian>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_monster>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ettin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_badhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goblin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=0
TAG.NPCAI.LooterType=1
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.Rank=1
IF ( (<ID>==c_m_dragon_crystal) || (<ID>==c_dragon_green) || (<ID>==c_dragon_red) )
TAG.NPCAI.Rank=5
ENDIF
IF ( (<ID>==c_m_dragon_wyrm) )
TAG.NPCAI.Rank=7
TAG.NPCAI.FighterType=4
ENDIF
IF ( (<ID>==c_m_dragon_wyrm_ancient) )
TAG.NPCAI.Rank=10
TAG.NPCAI.FighterType=4
ENDIF

[FUNCTION SetDemon]
TAG.NPCAI.Race=<EVAL racef_demon>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_demon>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_monster>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_darkelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_undead>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_badhuman>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ratman>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ogre>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_troll>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_gargoyle) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_daemon) || (<ID>==c_m_gargoyle_stone) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_daemon_w_sword) || (<ID>==c_m_icefiend) )
TAG.NPCAI.Rank=3
ENDIF
IF ( (<ID>==c_m_balron) )
TAG.NPCAI.Rank=5
ENDIF

[FUNCTION SetGoblin]
TAG.NPCAI.Race=<EVAL racef_goblin>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goblin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_orc>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ettin>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_darkelf>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_m_goblin_chief) || (<ID>==c_m_goblin_mage) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_m_goblin_lord) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_m_goblin_mage) )
TAG.NPCAI.FighterType=1
ENDIF
IF ( (<ID>==c_m_goblin_shaman) )
TAG.NPCAI.FighterType=2
ENDIF
IF ( (<ID>==c_m_goblin) )
TAG.NPCAI.FighterType=3
ENDIF

[FUNCTION SetScorpion]
TAG.NPCAI.Race=<EVAL racef_scorpion>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=0fffeffff //All races except scorpion race
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=0
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_m_scorpion_prince) || (<ID>==c_m_scorpion_queen) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_m_scorpion_king) )
TAG.NPCAI.Rank=2
ENDIF

[FUNCTION SetLizardman]
TAG.NPCAI.Race=<EVAL racef_lizardman>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ophidian>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.FormArmy=1
IF  ( (<ID>==c_lizardman) )
TAG.NPCAI.Rank=(-1)
ENDIF
IF ( (<ID>==c_lizardman_spear) ) || ((<ID>==c_lizardman_mace) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_lizardman_chief) ) || ((<ID>==c_lizardman_mage) )
TAG.NPCAI.Rank=2
ENDIF


[FUNCTION SetRatman]
TAG.NPCAI.Race=<EVAL racef_ratman>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_demon>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.FormArmy=1

[FUNCTION SetCyclops]
TAG.NPCAI.Race=<EVAL racef_cyclops>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_demon>)
TAG.NPCAI.Rank=1
TAG.NPCAI.NoEquip=1
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
//TAG.NPCAI.FormArmy=1
IF ( (<ID>==c_titan) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_m_cyclops_king) )
TAG.NPCAI.Rank=4
ENDIF

[FUNCTION SetOgre]
TAG.NPCAI.Race=<EVAL racef_ogre>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_demon>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
IF ( (<ID>==c_m_ogre_lord) )
TAG.NPCAI.Rank=4
ENDIF

[FUNCTION SetTroll]
TAG.NPCAI.Race=<EVAL racef_troll>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_troll>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_frostelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_darkelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_dragon>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_demon>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
IF ( (<ID>==c_troll_berserker) )
TAG.NPCAI.Rank=2
ENDIF

[FUNCTION SetGoodHuman]
TAG.NPCAI.Race=<EVAL racef_goodhuman>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_goodhuman>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=1
TAG.NPCAI.ResistInfight=1
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_badhuman>)
IF ( (<ID>==c_h_ranger) || (<ID>==c_h_ranger_f) || (<ID>==c_h_guild_ranger) || (<ID>==c_h_guild_ranger_f) )
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=0
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_undead>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_woodelf>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_animal>)
IF ( (<ID>==c_h_guild_ranger) || (<ID>==c_h_guild_ranger_f) )
TAG.NPCAI.Rank=1
ENDIF
ENDIF
IF ( (<ID>==C_H_HEALER) || (<ID>==C_H_HEALER_F) || (<ID>==C_H_HEAL_WANDER) || (<ID>==C_H_HEAL_WANDER_F) || (<ID>==C_H_GUILD_HEALER) || (<ID>==C_H_GUILD_HEALER_F) )
TAG.NPCAI.FighterType=2
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==C_H_MONK) || (<ID>==C_H_MONK_F) )
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==C_H_MAGE) || (<ID>==C_H_MAGE_F) )
TAG.NPCAI.FighterType=1
ENDIF
IF ( (<ID>==c_h_mercenary) || (<ID>==c_h_mercenary_f) )
TAG.NPCAI.Rank=(-1)
ENDIF
IF ( (<ID>==c_h_paladin) || (<ID>==c_h_paladin_f) )
TAG.NPCAI.FighterType=3
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==c_h_knight) )
TAG.NPCAI.Rank=2
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==c_h_commander) )
TAG.NPCAI.Rank=3
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==c_h_general) )
TAG.NPCAI.Rank=4
TAG.NPCAI.LooterType=0
ENDIF
IF ( (<ID>==c_h_fight_overseer) || (<ID>==c_h_paladin) || (<ID>==c_h_paladin_f) )
TAG.NPCAI.Rank=1
TAG.NPCAI.LooterType=0
ENDIF

[FUNCTION SetEvilHuman]
TAG.NPCAI.Race=<EVAL racef_badhuman>
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_badhuman>)
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.FormArmy=1
TAG.NPCAI.ResistInfight=0
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_goodhuman>)
IF ( (<ID>==c_h_dreadlord) )
TAG.NPCAI.Rank=1
ENDIF
IF ( (<ID>==c_h_dreadlord_captain) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_h_barbarian_warrioress) || (<ID>==c_h_barbarian_shaman) || (<ID>==c_h_barbarian_chieftan) || (<ID>==c_h_barbarian_warrior) )
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_orc>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ettin>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_woodelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_highelf>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_animal>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_scorpion>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_lizardman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ratman>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_cyclops>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ogre>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_troll>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_ophidian>)
TAG.NPCAI.Enemy=((0<TAG.NPCAI.Enemy>)|<EVAL racef_terathan>)
TAG.NPCAI.Ally=((0<TAG.NPCAI.Ally>)|<EVAL racef_frostelf>)
TAG.NPCAI.ResistInfight=1
IF ( (<ID>==c_h_barbarian_chieftan) )
TAG.NPCAI.Rank=2
ENDIF
IF ( (<ID>==c_h_barbarian_shaman) )
TAG.NPCAI.FighterType=2
TAG.NPCAI.Rank=1
ENDIF
ENDIF

[FUNCTION SetBasics]
IF ( <EVAL npcai_opt_customresist> )
EVENTS +e_resist
ENDIF
IF ( <EVAL npcai_opt_customcombat> )
EVENTS +e_combat
ENDIF
IF ( (<EVAL npcai_opt_skillgain>) )
EVENTS +e_skill_gain
ENDIF
IF ( (<EVAL npcai_opt_customhousemenu>) && (<NPC>==0) )
EVENTS +e_house
ENDIF
IF !( (0<TAG.NPCAI.ONPC>) )
IF ( (<NPC>==1) || (<NPC>==2) || (<NPC>==10) || (<NPC>==13) )
TAG.NPCAI.ONPC=<NPC>
NPC=14 //Setting NPC to 14 keeps them from attacking when not wanted
ENDIF
ENDIF
IF ( (<EVAL npcai_opt_summonsasmaster>) && (0<FINDLAYER(41).LINK.HITS>) && !(<NPC>==11) )
TAG.NPCAI.Race=<FINDLAYER(41).LINK.TAG.NPCAI.Race>
TAG.NPCAI.Rank=<EVAL ((<FINDLAYER(41).LINK.TAG.NPCAI.Rank>)-(1))>
TAG.NPCAI.Enemy=<FINDLAYER(41).LINK.TAG.NPCAI.Enemy>
TAG.NPCAI.Ally=<FINDLAYER(41).LINK.TAG.NPCAI.Ally>
TAG.NPCAI.LooterType=<FINDLAYER(41).LINK.TAG.NPCAI.LooterType>
TAG.NPCAI.AttackKarma=<FINDLAYER(41).LINK.ISEVENT.e_attack_npcs_karma>
TAG.NPCAI.ResistInfight=<FINDLAYER(41).LINK.ISEVENT.e_resist_infight>
KARMA=<FINDLAYER(41).LINK.KARMA>
FAME=<FINDLAYER(41).LINK.FAME>
ENDIF
EVENTS +e_inhibit_spells
EVENTS +e_click_recognition
IF ( (<EVAL npcai_opt_fixdebuffs>) )
EVENTS +e_fix_debuffs
ENDIF
IF ( <EVAL npcai_opt_reequip> )
TAG.NPCAI.STR.Temp=<STR>
TAG.NPCAI.DEX.Temp=<DEX>
TAG.NPCAI.INT.Temp=<INT>
CatalogPack
UnEquipInv
STR=<TAG.NPCAI.STR.Temp>
DEX=<TAG.NPCAI.DEX.Temp>
INT=<TAG.NPCAI.INT.Temp>
TAG.NPCAI.STR.Temp=
TAG.NPCAI.DEX.Temp=
TAG.NPCAI.INT.Temp=
EquipPack
ENDIF
IF !( <NPC> )
RETURN 0
ENDIF
IF ( (<CAN>)&(MT_USEHANDS) )
EVENTS +e_npc_bandage_self
ENDIF
IF ( ((0<TAG.NPCAI.LooterType>)>0) && (<EVAL npcai_opt_npclooting>) )
EVENTS +e_looter
ENDIF
IF ( (<EVAL npcai_opt_equipbestarmr>) || (<EVAL npcai_opt_equipbestwpn>) )
EVENTS +e_choose_best_equipment
ENDIF
IF ( (0<TAG.NPCAI.Enemy>) )
EVENTS +e_attack_npcs_hate
IF !( 0<TAG.NPCAI.Ally> )
TAG.NPCAI.Ally=0
ENDIF
IF ( (0<TAG.NPCAI.ResistInfight>) || (0<TAG.NPCAI.ImmuneInfight>) )
EVENTS +e_resist_infight
TAG.NPCAI.ResistInfight=
ENDIF
ENDIF
IF ( (0<TAG.NPCAI.AttackKarma>)==1 )
EVENTS +e_attack_npcs_karma
TAG.NPCAI.AttackKarma=
ENDIF
IF ( (<EVAL npcai_opt_chasewants>) )
EVENTS +e_chase_items
ENDIF
IF ( (<EVAL npcai_opt_layeggsincorpse>) && (<TAG.NPCAI.LayEggsInCorpse>) )
EVENTS +e_layeggsincorpse
ENDIF
IF ( (<EVAL npcai_opt_eatcorpse>) && (<TAG.NPCAI.EatCorpse>) )
EVENTS +e_eatcorpse
ENDIF


[FUNCTION ResetRace]
TAG.NPCAI.Race=00
TAG.NPCAI.Ally=00
TAG.NPCAI.Enemy=00
TAG.NPCAI.AttackKarma=00
TAG.NPCAI.FighterType=00
TAG.NPCAI.LooterType=00
TAG.NPCAI.ResistInfight=00
TAG.NPCAI.ImmuneInfight=00
TAG.NPCAI.FormArmy=00
TAG.NPCAI.Rank=00
TAG.NPCAI.LayEggsInCorpse=00
TAG.NPCAI.EatCorpse=00
//TAG.NPCAI.EquipmentCount=00
IF ( (0<TAG.NPCAI.ONPC>) )
NPC=<TAG.NPCAI.ONPC>
TAG.NPCAI.ONPC=
ENDIF
IF ( <EVAL npcai_opt_customresist> )
EVENTS -e_resist
ENDIF
IF ( (<EVAL npcai_opt_customcombat>) )
EVENTS -e_combat
ENDIF
IF ( (<EVAL npcai_opt_skillgain>) )
EVENTS -e_skill_gain
ENDIF
IF ( (<EVAL npcai_opt_customhousemenu>) && (<NPC>==0) )
EVENTS -e_house
ENDIF
EVENTS -e_attack_npcs_karma
EVENTS -e_attack_npcs_hate
EVENTS -e_resist_infight
EVENTS -e_inhibit_spells
EVENTS -e_click_recognition
EVENTS -e_npc_bandage_self
IF ( (<EVAL npcai_opt_chasewants>) )
EVENTS -e_chase_items
ENDIF
IF ( (<EVAL npcai_opt_fixdebuffs>) )
EVENTS -e_fix_debuffs
ENDIF
IF ( (<EVAL npcai_opt_npclooting>) )
EVENTS -e_looter
ENDIF
IF ( (<EVAL npcai_opt_equipbestarmr>) || (<EVAL npcai_opt_equipbestwpn>) )
EVENTS -e_choose_best_equipment
ENDIF
IF ( (<EVAL npcai_opt_layeggsincorpse>) )
EVENTS -e_layeggsincorpse
ENDIF
IF ( (<EVAL npcai_opt_eatcorpse>) )
EVENTS -e_eatcorpse
ENDIF

[FUNCTION f_determine_race]
ResetRace
IF ( <NPC> )
NEWITEM i_monster_marker //Create the marker
ACT.P=<P> //Set the marker at the NPC's feet
ACT.Z=(-70) //Put the marker out of sight
ACT.LINK=<UID> //Make the NPC the marker's link
TAG.NPCAI.Marker=<ACT.UID> //Make a tag on the NPC to reference the marker if need be
ENDIF
IF ( (STRMATCH( *terathan*, <ID> )) )
SetTerathan
ELIF ( (STRMATCH( *ophidian*, <ID> )) )
SetOphidian
ELIF ( (STRMATCH( *orc*, <ID> )) )
SetOrc
ELIF ( (STRMATCH( *ettin*, <ID> )) )
SetEttin
ELIF ( (STRMATCH( *woodelf*, <ID> )) )
SetWoodElf
ELIF ( (STRMATCH( *frostelf*, <ID> )) )
SetFrostElf
ELIF ( (STRMATCH( *highelf*, <ID> )) )
SetHighElf
ELIF ( (STRMATCH( *darkelf*, <ID> )) )
SetDarkElf
ELIF ( <NPC>==BRAIN_UNDEAD )
SetUndead
ELIF ( <NPC>==BRAIN_ANIMAL )
SetAnimal
ELIF ( (STRMATCH( c_dragon*, <ID> )) || (STRMATCH( c_m_dragon*, <ID> )) )
SetDragon
ELIF ( (STRMATCH( *demon*, <ID> )) || (STRMATCH( *daemon*, <ID> )) || (<ID>==c_m_balron) || (<ID>==c_daemon) || (<ID>==c_daemon_w_sword) || (<ID>==c_gargoyle) || (<ID>==c_m_gargoyle_stone) || (<ID>==c_m_icefiend) || (<ID>==c_m_hellhound) || (<ID>==c_m_hellcat) || (<ID>==c_m_hellcat_pred) || (<ID>==c_goatmanmace) || (<ID>==c_goatmanarcher) )
SetDemon
ELIF ( (STRMATCH( *goblin*, <ID> )) )
SetGoblin
ELIF ( (STRMATCH( *scorpion*, <ID> )) )
SetScorpion
ELIF ( (STRMATCH( *lizardman*, <ID> )) || (<ID>==c_m_wyvern) || (<ID>==c_lizardman) )
SetLizardman
ELIF ( (STRMATCH( *ratman*, <ID> )) )
SetRatman
ELIF ( (STRMATCH( *cyclop*, <ID> )) || (<ID>==c_titan) )
SetCyclops
ELIF ( (STRMATCH( *ogre*, <ID> )) )
SetOgre
ELIF ( (STRMATCH( *troll*, <ID> )) )
SetTroll
ELSE
IF ( !(STRCMPI(<NAME>,Energy Vortex)) && (<EVAL npcai_opt_energyvortex>) )
FINDLAYER(41).TIMER=<EVAL {((npcai_opt_energyvortex)/2) (((npcai_opt_energyvortex)/2)*3)}>
ENDIF
IF ( !(STRCMPI(<NAME>,Blade Spirits)) && (<EVAL npcai_opt_bladespirits>) )
FINDLAYER(41).TIMER=<EVAL {((npcai_opt_bladespirits)/2) (((npcai_opt_bladespirits)/2)*3)}>
ENDIF
TAG.NPCAI.AttackKarma=1
TAG.NPCAI.LooterType=1
TAG.NPCAI.Race=000000002
IF ( (<BODY>==c_man) || (<BODY>==c_woman) )
IF ( <KARMA>>=0 )
SetGoodHuman
ELIF ( <KARMA><(0) )
SetEvilHuman
ENDIF
ENDIF
ENDIF
SetBasics
TAG.NPCAI.OrigHome=<P>


[EVENTS e_marker_init]
ON=@EnvironChange
IF !(0<SRC.TAG.NPCAI.Marker>)
SRC.f_determine_race
ENDIF
SRC.EVENTS -e_marker_init
RETURN 0


[EVENTS e_Human_Scavenge]

ON=@npcSeeWantItem
IF ( <ACT.ID>==01f13 )
RETURN 0
ENDIF
IF ( <KARMA.WICKED> || ( <KARMA.BELLIGERANT> )
IF ( <COMPLEXITY.HIGH> )
DORAND 6
SAY Mine!
SAY I'll take that!
SAY Keep away from this! It's mine!
SAY Ah ha! It's mine!
SAY Come here, my pretty.
SAY Well here's something!
ENDDO
ELIF ( <COMPLEXITY.MEDIUM> )
DORAND 6
SAY Well, well, what have we here?
SAY Ah, this will be useful.
SAY Excellent. 'Tis my lucky day.
SAY I've been needing one of these.
SAY This will come in handy indeed.
SAY Well, look what I found!
ENDDO
ELSE
DORAND 5
SAY Why look at that!
SAY Ah, most interesting.
SAY This may be of some use.
SAY And what's this then?
SAY A most fortunate discovery!
ENDDO
ENDIF
ELIF ( <KARMA.NEUTRAL> )
IF ( <COMPLEXITY.HIGH> )
DORAND 6
SAY Mine!
SAY I'll take that!
SAY Keep away from that! It's mine!
SAY Ah ha! I've got it now.
SAY Come here, my pretty.
SAY Here's something!
ENDDO
ELIF ( <COMPLEXITY.MEDIUM> )
DORAND 6
SAY Well, well, what have we here?
SAY Ah, this will be useful.
SAY Excellent. 'Tis my lucky day.
SAY I've been needing one of these.
SAY This will come in handy indeed.
SAY Hmmm! Look what I found!
ENDDO
ELSE
DORAND 5
SAY Why look at that!
SAY Ah, most interesting.
SAY This may be of some use.
SAY And what's this then?
SAY A most fortunate discovery!
ENDDO
ENDIF
ELSE
IF ( <COMPLEXITY.HIGH> )
DORAND 5
SAY Mine!
SAY I'll take that!
SAY Ah ha!
SAY Come here, my pretty.
SAY At last!
ENDDO
ELIF ( <COMPLEXITY.MEDIUM> )
DORAND 6
SAY Well, well, what have we here?
SAY Ah, this will be useful.
SAY Excellent. This is mine, now.
SAY This'll help.
SAY This'll come in handy.
SAY Huh! Look what I found!
ENDDO
ELSE
DORAND 5
SAY Why look at that!
SAY Ah. Good.
SAY This'll be of use.
SAY And what's this then?
SAY This is useful!
ENDDO
ENDIF
ENDIF
return 1



//This section written by PhoeniX/GM_Cancerbero
//Edited by Lerkur to be used in Lerkur's NPC Race System


[FUNCTION loot_corpse]
IF !(0<ACT.FINDCONT(0).UID>==0)
IF ( ((0<VAR.TempVar>)<(250)) ) //Failsafe for infinite loop
IF ( ((<SRC.WEIGHT>)>((<SRC.STR>)*39)) || ((0<FINDLAYER(21).UID>)==0) )
RETURN 1
ENDIF
VAR.TempVar=((0<VAR.TempVar>)+1)
ACT.FINDCONT(0).CONT=<FINDLAYER(21).UID>
loot_corpse
ENDIF
ENDIF
RETURN 1

[EVENTS e_looter]
ON=@ItemStep
IF ( (<ACT.BASEID>==i_corpse) && ((<SRC.CAN>)&(MT_USEHANDS)) && ((0<ACT.FINDCONT(0).UID>)!=0) && ((0<SRC.FINDLAYER(21).UID>)!=0) )
IF ( ((0<SRC.TAG.NPCAI.LooterType>)==0) || ((<SRC.FLAGS>)&(statf_war)) || ((<SRC.WEIGHT>)>((<SRC.STR>)*39)) || ((0<SRC.FINDLAYER(21).UID>)==0) )
RETURN 0
ENDIF
SRC.EMOTE looting <ACT.NAME>
VAR.TempVar=0
loot_corpse
IF !( (0<SRC.TAG.NPCAI.NoEquip>) )
IF ( (<EVAL npcai_opt_equipbestarmr>) )
SRC.EQUIPARMOR
ENDIF
IF ( (<EVAL npcai_opt_equipbestwpn>) )
SRC.EQUIPWEAPON
ENDIF
ENDIF
ENDIF
IF ( ((<SRC.CAN>)&(MT_USEHANDS)) &&; ((0<SRC.FINDLAYER(21).UID>)!=0) )
IF ( (<ACT.ATTR>==02) || (<ACT.ATTR>==03) )
IF ( (((<ACT.VALUE>)*(<ACT.AMOUNT>))>10) )
IF ( ((0<SRC.TAG.NPCAI.LooterType>)==0) || ((<SRC.FLAGS>)&(statf_war)) || ((<SRC.WEIGHT>)>((<SRC.STR>)*39)) || ((0<SRC.FINDLAYER(21).UID>)==0) )
RETURN 0
ENDIF
ACT.BOUNCE
IF !( (0<SRC.TAG.NPCAI.NoEquip>) )
IF ( (<EVAL npcai_opt_equipbestarmr>) )
SRC.EQUIPARMOR
ENDIF
IF ( (<EVAL npcai_opt_equipbestwpn>) )
SRC.EQUIPWEAPON
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
RETURN 0



//This section written by Tracker on www.sphereserver.com
//Script cleaned up and edited by Lerkur

[EVENTS e_npc_bandage_self]
on=@gethit
IF ( ((<HITS>)<(<EVAL ((<STR>*3)/4)>)) )
IF ( (<CAN>&MT_USEHANDS) && ((0<HEALING>)>(300)) )
var.random=<eval {1 20}>
if (<var.random><10)
if (<restest 1 i_bandage>)
if (<eval <tag.bandaging>>!=01)
src.newitem i_npc_bandage_timer
src.act.link=<uid>
src.act.p=<p>
tag.bandaging=1
endif
endif
endif
ENDIF
ENDIF

[ITEMDEF i_npc_bandage_timer]
ID=0206a
NAME=npc bandage timer - do not remove

ON=@CREATE
attr=04082
TIMERD={20 40}

on=@timer
IF !( <LINK.HITS> )
link.tag.bandaging=
remove
return 1
ENDIF
link.consume 1 i_bandage
link.hits=<EVAL <link.hits>+({((<LINK.HEALING>+<LINK.ANATOMY>)/100) ((<LINK.HEALING>+<LINK.ANATOMY>)/20)})+(10)>
IF ( (<LINK.HITS>)>(<LINK.STR>) )
LINK.HITS=<LINK.STR>
ENDIF
link.emote bandage <link.name>
link.update
link.tag.bandaging=
remove
return 1


//************************************************** ***************
//** Lay Eggs In Corpse Events
//** By Lerkur
//** Last Edited 07/17/02
//**
//** This script contains:
//** -An event that allows for laying of eggs in corpses
//************************************************** ***************

[ITEMDEF i_spawn_egg]
DEFNAME=i_spawn_egg
NAME=egg
ID=010dc
CATEGORY=Miscellaneous
SUBSECTION=Misc
DESCRIPTION=Spawning Egg

ON=@Timer
IF ( (0<LINK.HITS>) )
f_egg_gestate <AMOUNT>
IF ( (<EVAL (0<LINK.TAG.NPCAI.LEIC.DieOnHatch>)>) && !(<EVAL (0<LINK.TAG.NPCAI.LEIC.TotalQuantity>)>) )
LINK.HITS=0
ENDIF
ENDIF
REMOVE

ON=@DClick
IF ( ((<DISTANCE>)<(2)) )
SRC.MESSAGE destruir <QVAL (<AMOUNT>-1) ? some eggs : an egg>
SOUND snd_MONSTER_SLIME1
SRC.ANIM 20FB
REMOVE
ELSE
SRC.SYSMESSAGE ESta muito longe.
ENDIF
RETURN 1

[FUNCTION f_egg_gestate]
IF ( (<ARGN>)<(1) )
RETURN 0
ENDIF
IF !( (<SECTOR.COMPLEXITY>)>((<SERV.MAXCOMPLEXITY>)*(1)) )
VAR.GESTATE.OldACT=<LINK.ACT>
LINK.NEWNPC { <LINK.TAG.NPCAI.LEIC.Type1> <EVAL <LINK.TAG.NPCAI.LEIC.Weight1>> <LINK.TAG.NPCAI.LEIC.Type2> <EVAL <LINK.TAG.NPCAI.LEIC.Weight2>> <LINK.TAG.NPCAI.LEIC.Type3> <EVAL <LINK.TAG.NPCAI.LEIC.Weight3>> <LINK.TAG.NPCAI.LEIC.Type4> <EVAL <LINK.TAG.NPCAI.LEIC.Weight4>> <LINK.TAG.NPCAI.LEIC.Type5> <EVAL <LINK.TAG.NPCAI.LEIC.Weight5>> }
LINK.ACT.P=<P>
LINK.ACT.UPDATE
LINK.ACT=<VAR.GESTATE.OldACT>
ENDIF
f_egg_gestate <EVAL (<ARGN>-1)>

[EVENTS e_layeggsincorpse]
ON=@ItemStep
IF ( (<ACT.BASEID>==i_corpse) && !((<FLAGS>)&(statf_war)) && (((<EVAL <TAG.NPCAI.LEIC.TotalQuantity>>)>(0)) || ((<EVAL <TAG.NPCAI.LEIC.TotalQuantity>>)==(-1))) )
ACT.REMOVE
NEWITEM i_spawn_egg
ACT.DISPID=<TAG.NPCAI.LEIC.Graphic>
ACT.COLOR=<TAG.NPCAI.LEIC.Color>
ACT.LINK=<UID>
ACT.AMOUNT=<EVAL {1 <TAG.NPCAI.LEIC.Amount>}>
IF !( (<TAG.NPCAI.LEIC.TotalQuantity>)==(-1) )
TAG.NPCAI.LEIC.TotalQuantity=<EVAL (<TAG.NPCAI.LEIC.TotalQuantity>-<ACT.AMOUNT>)>
IF ( (<TAG.NPCAI.LEIC.Amount>)>(<TAG.NPCAI.LEIC.TotalQuantity>) )
TAG.NPCAI.LEIC.Amount=<TAG.NPCAI.LEIC.TotalQuantity>
ENDIF
ENDIF
TAG.NPCAI.EggsLaid=<EVAL ((0<TAG.NPCAI.EggsLaid>)+(<ACT.AMOUNT>))>
IF ( (<ACT.AMOUNT>)>1 )
ACT.NAME=Ovos
EMOTE <TAG.NPCAI.LEIC.Message> eggs
ELSE
EMOTE <TAG.NPCAI.LEIC.Message> an egg
ENDIF
ACT.ATTR=08052
ACT.P=<P>
ACT.TIMER={<EVAL (<TAG.NPCAI.LEIC.GestationTime>/2)> <EVAL ((<TAG.NPCAI.LEIC.GestationTime>/2)*3)>}
ENDIF
RETURN 1

//************************************************** ***************
//** Eat Corpse Events
//** By Lerkur
//** Last Edited 07/17/02
//**
//** This script contains:
//** -An event that allows for eating of corpses
//************************************************** ***************

[EVENTS e_eatcorpse]
ON=@ItemStep
IF ( (<ACT.BASEID>==i_corpse) && !((<FLAGS>)&(statf_war)) )
TAG.NPCAI.CorpsesEaten=<EVAL ((0<TAG.NPCAI.CorpsesEaten>)+(1))>
MESSAGE * comendo * <ACT.NAME>
VAR.EATCORPSE.STR=<STR>
VAR.EATCORPSE.HITS=<HITS>
VAR.EATCORPSE.DEX=<DEX>
VAR.EATCORPSE.STAM=<STAM>
VAR.EATCORPSE.INT=<INT>
VAR.EATCORPSE.MANA=<MANA>
STR=<EVAL (<STR>)+((<STR>*0)/100)+15>
DEX=<EVAL (<DEX>)+((<DEX>*0)/100)+15>
INT=<EVAL (<INT>)+((<INT>*0)/100)+15>
HITS=<EVAL (<HITS>)+((<STR>*20)/100)+1>
STAM=<EVAL (<STAM>)+((<DEX>*20)/100)+1>
MANA=<EVAL (<MANA>)+((<INT>*20)/100)+1>
IF ( ((<HITS>)>(<STR>)) && !((<VAR.EATCORPSE.HITS>)>(<STR>)) )
HITS=<STR>
ENDIF
IF ( ((<STAM>)>(<DEX>)) && !((<VAR.EATCORPSE.STAM>)>(<DEX>)) )
STAM=<DEX>
ENDIF
IF ( ((<MANA>)>(<INT>)) && !((<VAR.EATCORPSE.MANA>)>(<INT>)) )
MANA=<INT>
ENDIF
IF ( (<STR>)<(<VAR.EATCORPSE.STR>) )
STR=<EVAL <VAR.EATCORPSE.STR>>
ENDIF
IF ( (<DEX>)<(<VAR.EATCORPSE.DEX>) )
DEX=<EVAL <VAR.EATCORPSE.DEX>>
ENDIF
IF ( (<INT>)<(<VAR.EATCORPSE.INT>) )
INT=<EVAL <VAR.EATCORPSE.INT>>
ENDIF
IF ( (<HITS>)<(<VAR.EATCORPSE.HITS>) )
HITS=<EVAL <VAR.EATCORPSE.HITS>>
ENDIF
IF ( (<STAM>)<(<VAR.EATCORPSE.STAM>) )
STAM=<EVAL <VAR.EATCORPSE.STAM>>
ENDIF
IF ( (<MANA>)<(<VAR.EATCORPSE.MANA>) )
MANA=<EVAL <VAR.EATCORPSE.MANA>>
ENDIF
UPDATE
ACT.REMOVE
ENDIF
RETURN 1


//************************************************** ***************
//** Chase Items Event
//** By Lerkur
//** Last Edited 07/22/02
//**
//** This script contains:
//** -e_chase_items
//************************************************** ***************

[EVENTS e_chase_items]
ON=@NPCSeeWantItem
IF ( (<FLAGS>&statf_war) )
RETURN 1
ENDIF
VAR.DifX=<EVAL (<ACT.P.X>-<P.X>)>
VAR.DifY=<EVAL (<ACT.P.Y>-<P.Y>)>
IF ( ((<EVAL <VAR.DifX>>)>(0)) )
IF ( ((<EVAL <VAR.DifY>>)>(0)) )
WALK SE
ELIF ( ((<EVAL <VAR.DifY>>)<(0)) )
WALK NE
ELSE
WALK E
ENDIF
ELIF ( ((<EVAL <VAR.DifX>>)<(0)) )
IF ( ((<EVAL <VAR.DifY>>)>(0)) )
WALK SW
ELIF ( ((<EVAL <VAR.DifY>>)<(0)) )
WALK NW
ELSE
WALK W
ENDIF
ELSE
IF ( ((<EVAL <VAR.DifY>>)>(0)) )
WALK S
ELIF ( ((<EVAL <VAR.DifY>>)<(0)) )
WALK N
ENDIF
ENDIF
RETURN 0


//************************************************** ***************
//** NPC Attack Events
//** By Lerkur
//** Last Edited 08/11/02
//**
//** This script contains:
//** -i_attackcue_mem item to trigger attack
//** -i_race_criminal_mem item to flag and unflag criminal status (This should be rewritten)
//** -AttackNPC function that causes the SRC to attack the ACT.LINK
//** -AttackPC function that causes the SRC to attack the []
//** -AssistAlly function that causes the SRC to attack ACT.LINK.ACT
//** -e_attack_npcs_karma events that trigger attack and assistance based on karma levels
//** and also cause NPCs not to leave a corpse when killed by an NPC
//** -e_attack_npcs_hate events that trigger attack and assistance based on race
//** and also cause NPCs not to leave a corpse when killed by an NPC
//** and causes an NPC to attack a criminal player
//** and includes an event to deter NPCs from fighting their own race
//** -e_click_recognition event that shows a PC if an NPC is racially hostile to them
//************************************************** ***************

[ITEMDEF i_attackcue_mem]
ID=i_memory
TYPE=t_eq_script
NAME=Attack Cue

ON=@UnEquip
SRC.ACT.LINK.ATTACK //Cause the linked NPC to attack the SRC one

[ITEMDEF i_race_criminal_mem]
ID=i_memory
TYPE=t_eq_script
NAME=Criminal Memory

ON=@Timer
REMOVE

ON=@UnEquip //Rescript this section using race specific criminal tags
SRC.FLAGS=(<SRC.FLAGS>&~statf_criminal)

ON=@Equip //Rescript this section using race specific criminal tags
SRC.FLAGS=(<SRC.FLAGS>|statf_criminal)
ATTR=04002
TIMER=(60*<SERV.CRIMINALTIMER>)

[FUNCTION AttackNPC]
IF ( (<SRC.FIXACTION>==(skill_magery)) || (<SRC.FINDLAYER(41)>) || (<FLAGS>& statf_pet) )
RETURN 0
ENDIF
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==0) || (0<SRC.TAG.NPCAI.MakeFight>) || (<SRC.ACT.LINK.FLAGS>& statf_war) || ((0<SRC.ACT.LINK.TAG.NPCAI.FighterType>)!=0) )
SRC.TAG.NPCAI.MakeFight= //Clear MakeFight tag
SRC.ACT.LINK.NEWITEM i_attackcue_mem //Create a memory item to trigger the attack with
SRC.ACT.LINK.ACT.LINK=<SRC.UID> //Set the link to the target for .ATTACK (Happens to be SRC)
SRC.ACT.LINK.ACT.CONT=<SRC.ACT.LINK.UID> //Equip (sort of) the memory item on the spotted NPC
SRC.ACT.LINK.ACT.REMOVE //Remove memory and trigger @UnEquip
ELIF ( (<SRC.HITS>)>(<SRC.ACT.LINK.HITS>) ) //One in three chance
SRC.TAG.NPCAI.MakeFight=1 //Fight anyway
SRC.AttackNPC
ENDIF

[FUNCTION AttackPC]
IF ( (<SRC.FIXACTION>!=(skill_magery)) && (!(<SRC.FLAGS>&statf_invul)) && !(<SRC.FINDLAYER(41)>) && !(<FLAGS>& statf_pet) )
SRC.NEWITEM i_attackcue_mem //Create a memory item to trigger the attack with
SRC.ACT.LINK=<UID> //Set the link to the target for .ATTACK (Happens to be SRC)
SRC.ACT.CONT=<SRC.UID> //Equip (sort of) the memory item on the spotted NPC
SRC.ACT.REMOVE //Remove memory and trigger @UnEquip
ENDIF

[FUNCTION AssistAlly]
IF ( (<SRC.FIXACTION>!=(skill_magery)) && !(<SRC.FINDLAYER(41)>) && !(<FLAGS>&statf_pet) )
SRC.ACT.LINK.ACT.NEWITEM i_attackcue_mem //Create a memory item to trigger the attack with
SRC.ACT.LINK.ACT.ACT.LINK=<SRC.UID> //Set the link to the target for .ATTACK (Happens to be SRC)
SRC.ACT.LINK.ACT.ACT.CONT=<SRC.ACT.LINK.ACT.UID> //Equip (sort of) the memory item on the spotted NPC
SRC.ACT.LINK.ACT.ACT.REMOVE //Remove memory and trigger @UnEquip
ENDIF

[EVENTS e_attack_npcs_karma]
ON=@NPCSeeWantItem //I see something good.
IF ( <ACT.ID>==01f13) //Originally the ID of the the large worldgem, now i_monster_marker
IF !( (0<ACT.LINK.CanSeeLOS>) )
RETURN 1
ENDIF
IF ( <ACT.LINK.UID>==<SRC.UID> ) //If I have spotted myself.
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==1) || ((0<SRC.TAG.NPCAI.FighterType>)==2) || ((0<SRC.TAG.NPCAI.FighterType>)==3) || ((0<SRC.TAG.NPCAI.FighterType>)==4) )
SRC.FriendlySpellCheck <ACT.LINK>
ENDIF
RETURN 1 //Do nothing
ENDIF
IF ( (0<SRC.MEMORYFINDTYPE(MEMORY_IPET)>) )
RETURN 1
ENDIF
IF ( <SRC.KARMA>>0 ) //If my karma is good
IF ( (0<ACT.LINK.KARMA>)<(-1000) ) //If my target's karma is bad
IF !( ((0<ACT.LINK.TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) || ((0<SRC.TAG.NPCAI.Ally>)&(0<ACT.LINK.TAG.NPCAI.Race>)) )
SRC.AttackNPC
ENDIF
ELIF ( ((0<ACT.LINK.KARMA>)>0) ) //If my target's karma is good
IF !( (0<SRC.TAG.NPCAI.Enemy>)&(0<ACT.LINK.TAG.NPCAI.Race>) || (0<ACT.LINK.TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>) )
IF ( (<ACT.LINK.FLAGS>&statf_war) && (0<ACT.LINK.ACT.HITS>) ) //If my target is in warmode and his target is alive
SRC.AssistAlly
ENDIF
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==2) || ((0<SRC.TAG.NPCAI.FighterType>)==3) )
SRC.FriendlySpellCheck <ACT.LINK>
ENDIF
ENDIF
ENDIF
ELIF ( <SRC.KARMA><(-1000) ) //If my karma is bad
IF ( (0<SRC.ACT.LINK.KARMA>)>0 ) //If my targets karma is good
IF !( ((0<ACT.LINK.TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) || ((0<SRC.TAG.NPCAI.Ally>)&(0<ACT.LINK.TAG.NPCAI.Race>)) )
SRC.AttackNPC
ENDIF
ELIF ( ((0<ACT.LINK.KARMA>)<(-1000)) ) //If my target's karma is bad
IF !( (0<SRC.TAG.NPCAI.Enemy>)&(0<ACT.LINK.TAG.NPCAI.Race>) || (0<ACT.LINK.TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>) )
IF ( (<ACT.LINK.FLAGS>&statf_war) && (0<ACT.LINK.ACT.HITS>) ) //If my target is in warmode and his target is alive
//Following line commented out so that evil npcs would not help other evil npcs without race reasons
//SRC.AssistAlly
ENDIF
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==2) || ((0<SRC.TAG.NPCAI.FighterType>)==3) )
//Following line commented out so that evil npcs would not heal other evil npcs without race reasons
//SRC.FriendlySpellCheck <ACT.LINK>
ENDIF
ENDIF
ENDIF
ENDIF
RETURN 1
ENDIF
RETURN 0 //Not sure if returning 0 or 1 here is the right thing to do, both seem to work.

ON=@NPCSeeNewPlayer
IF ( (0<MEMORYFINDTYPE(MEMORY_IPET)>) )
RETURN 1
ENDIF
IF ( <KARMA>>0 ) //If my karma is good
IF ( (0<SRC.KARMA>)<(1) ) //If my target's karma is bad
IF !( ((0<TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) )
AttackPC
ENDIF
ELIF ( ((0<SRC.KARMA>)>0) ) //If my target's karma is good
IF !( (0<TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>) )
IF ( ((0<TAG.NPCAI.FighterType>)==2) || ((0<TAG.NPCAI.FighterType>)==3) )
FriendlySpellCheck <SRC.UID>
ENDIF
ENDIF
ENDIF
ELIF ( <KARMA><(-1000) ) //If my karma is bad
IF ( (0<SRC.KARMA>)>0 ) //If my targets karma is good
IF !( ((0<TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) )
AttackPC
ENDIF
ELIF ( ((0<SRC.KARMA>)<(1)) ) //If my target's karma is bad
IF !( (0<TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>) )
IF ( ((0<TAG.NPCAI.FighterType>)==2) || ((0<TAG.NPCAI.FighterType>)==3) )
FriendlySpellCheck <SRC.UID>
ENDIF
ENDIF
ENDIF
ENDIF
RETURN 1

ON=@Death
IF ( !((0<ACT.BRAIN>)==0) && (<EVAL npcai_opt_lowbodycount>) ) //If I was killed by an NPC and the option is enabled
IF ( (<SECTOR.COMPLEXITY>)>((<SERV.MAXCOMPLEXITY>)+(-1)) )
SRC.FLAGS=(<SRC.FLAGS>|statf_conjured) //Make it so NPCs killed by other NPCs don't leave a corpse
ENDIF
ENDIF
RETURN 0 //Continue on

[EVENTS e_attack_npcs_hate]
ON=@NPCSeeWantItem //I see something good.
IF ( <ACT.ID>==01f13) //Originally the ID of the the large worldgem, now i_monster_marker
IF !( (0<ACT.LINK.CanSeeLOS>) )
RETURN 1
ENDIF
IF ( <ACT.LINK.UID>==<SRC.UID> ) //If I have spotted myself.
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==1) || ((0<SRC.TAG.NPCAI.FighterType>)==2) || ((0<SRC.TAG.NPCAI.FighterType>)==3) || ((0<SRC.TAG.NPCAI.FighterType>)==4) )
SRC.FriendlySpellCheck <ACT.LINK>
ENDIF
RETURN 1 //Do nothing
ENDIF
IF ( (0<SRC.MEMORYFINDTYPE(MEMORY_IPET)>) )
RETURN 1
ENDIF
IF ( ((0<SRC.TAG.NPCAI.Enemy>)&(0<ACT.LINK.TAG.NPCAI.Race>)) || ((0<ACT.LINK.TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>)) ) //If my target's race is in my hates
IF ( 0<SRC.TAG.NPCAI.InSquad> )
SRC.SquadAttackNPC
RETURN 1
ELSE
SRC.AttackNPC
RETURN 1
ELSE
SRC.AttackNPC
ENDIF
RETURN 1
ELIF ( ((0<SRC.TAG.NPCAI.Ally>) & (0<ACT.LINK.TAG.NPCAI.Race>)) || ((0<ACT.LINK.TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) ) //If my target is a friendly
IF ( (<ACT.LINK.FLAGS>&statf_war) && (0<ACT.LINK.ACT.HITS>) ) //If ally is in combat mode and alive
IF ( 0<SRC.TAG.NPCAI.InSquad> )
SRC.SquadAssistAlly
RETURN 1
ELSE
SRC.AssistAlly
ENDIF
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==2) || ((0<SRC.TAG.NPCAI.FighterType>)==3) )
SRC.FriendlySpellCheck <ACT.LINK>
ENDIF
ELSE
SRC.SquadTest
IF ( ((0<SRC.TAG.NPCAI.FighterType>)==2) || ((0<SRC.TAG.NPCAI.FighterType>)==3) )
SRC.FriendlySpellCheck <ACT.LINK>
ENDIF
ENDIF
RETURN 1
ENDIF
IF ( (0<SRC.ISEVENT.e_attack_npcs_karma>) )
RETURN 0
ELSE
RETURN 1
ENDIF
ENDIF
RETURN 0 //Not sure if returning 0 or 1 here is the right thing to do, both seem to work.

ON=@NPCSeeNewPlayer
IF ( (0<MEMORYFINDTYPE(MEMORY_IPET)>) )
RETURN 1
ENDIF
IF ( (0<TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>) )
AttackPC
RETURN 1
ENDIF
IF ( ((0<TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) )
IF ( ((0<TAG.NPCAI.FighterType>)==2) || ((0<TAG.NPCAI.FighterType>)==3) )
FriendlySpellCheck <SRC.UID>
RETURN 1
ENDIF
ENDIF
RETURN ((-1)*((-1)+(0<ISEVENT.e_attack_npcs_karma>)))

ON=@Death
IF ( !((0<ACT.BRAIN>)==0) && (<EVAL npcai_opt_lowbodycount>) ) //If I was killed by an NPC and the option is enabled
IF ( (<SECTOR.COMPLEXITY>)>((<SERV.MAXCOMPLEXITY>)+(-1)) )
SRC.FLAGS=(<SRC.FLAGS>|statf_conjured) //Make it so this NPC doesn't leave a corpse
ENDIF
ENDIF
RETURN 0 //Continue on

[EVENTS e_resist_infight]
ON=@GetHit
IF ( ((<UID>==<SRC.UID>) || ((<SRC.NPC>)==0) || ((0<TAG.NPCAI.LastHitBy>)==(<SRC.UID>))) && !(0<TAG.NPCAI.ImmuneInfight>) )
TAG.NPCAI.LastHitBy=
RETURN 0
ENDIF
TAG.NPCAI.LastHitBy=<SRC.UID>
IF ( (0<SRC.TAG.NPCAI.Ally>)&(0<TAG.NPCAI.Race>) ) //If the attacker is an ally
HITS=((<HITS>)+((-1)*(<ARGN>)))
RETURN 1
ENDIF

[EVENTS e_click_recognition]
ON=@Click
IF ( ((0<MEMORYFINDTYPE(MEMORY_IPET).LINK>)==(<SRC.UID>)) )
MESSAGE [Minion]
ELIF ( ((0<SRC.TAG.NPCAI.Enemy>)&(0<TAG.NPCAI.Race>)) || ((0<TAG.NPCAI.Enemy>)&(0<SRC.TAG.NPCAI.Race>)) ) //If clicked (N)PC is an enemy
MESSAGE [Racial Enemy]
ELIF ( ((0<TAG.NPCAI.Ally>)&(0<SRC.TAG.NPCAI.Race>)) || ((0<SRC.TAG.NPCAI.Ally>)&(0<TAG.NPCAI.Race>)) ) //If clicked (N)PC is an ally
MESSAGE [Racial Ally]
ENDIF
RETURN 0 // Display name


//************************************************** ***************
//** NPC Squad Events
//** By Lerkur
//** Last Edited 07/07/02
//**
//** This script contains:
//** -SquadAttackNPC Function
//** -SquadAssistAlly Function
//** -i_squad_ld_mem
//** -i_squad_member_one
//** -i_squad_member_two
//** -i_squad_member_three
//** -i_squad_member_four
//** -i_squad_member_five
//** -i_squad_member_mem
//** -i_squad_assignment_mem
//** -SquadTest Function
//** -FormSquad Function
//** -e_squad_member Events
//** -SquadDistribute Function
//** -HealerSpells Function
//************************************************** ***************

//Rescript the squad attacks to use simple functions and TRYP

[FUNCTION SquadAttackNPC]
IF ( 0<SRC.FINDID(i_squad_ld_mem)> )
SRC.FINDID(i_squad_ld_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_ld_mem).TIMER=1
IF ( 0<SRC.FINDID(i_squad_member_one)> )
SRC.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_two)> )
SRC.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_three)> )
SRC.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_four)> )
SRC.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_five)> )
SRC.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
ELSE
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).TIMER=1
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
ENDIF


[FUNCTION SquadAssistAlly]
IF ( 0<SRC.FINDID(i_squad_ld_mem)> )
SRC.FINDID(i_squad_ld_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_ld_mem).TIMERD=1
IF ( 0<SRC.FINDID(i_squad_member_one)> )
SRC.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_two)> )
SRC.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_three)> )
SRC.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_four)> )
SRC.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_five)> )
SRC.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
ELSE
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).TIMERD=1
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five)> )
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.ACT.LINK.ACT.UID>
SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
ENDIF

[ITEMDEF i_squad_ld_mem]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Leader Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
SRC.EVENTS +e_squad_member
TIMER=2

ON=@Timer
TIMER=5
IF ( (0<LINK.HITS>) && (0<CONT.TAG.NPCAI.FormArmy>) )
CONT.HOME=<LINK.P>
ELSE
LINK=0
CONT.HOME=<CONT.P>
ENDIF
IF ( ((0<CONT.TAG.NPCAI.FighterType>)==2) || ((0<CONT.TAG.NPCAI.FighterType>)==3) )
HealerSpells
ENDIF
IF ( <MORE2> && (<CONT.FIXACTION>!=(skill_magery)) )
CONT.TAG.NPCAI.TempLink=<LINK>
LINK=<MORE2>
LINK.NEWITEM i_attackcue_mem //Create a memory item to trigger the attack with
LINK.ACT.LINK=<CONT.UID> //Set the link to the target for .ATTACK (Happens to be SRC)
LINK.ACT.CONT=<LINK.UID> //Equip (sort of) the memory item on the spotted NPC
LINK.ACT.REMOVE //Remove memory and trigger @UnEquip
LINK=<CONT.TAG.NPCAI.TempLink>
CONT.TAG.NPCAI.TempLink=
ENDIF
MORE2=0
IF ( ((0<CONT.FINDID(i_squad_member_one)>)==0) && ((0<CONT.FINDID(i_squad_member_two)>)==0) && ((0<CONT.FINDID(i_squad_member_three)>)==0) && ((0<CONT.FINDID(i_squad_member_four)>)==0) && ((0<CONT.FINDID(i_squad_member_five)>)==0) )
REMOVE
ENDIF
RETURN 1

ON=@UnEquip
SRC.TAG.NPCAI.InSquad=
SRC.EVENTS -e_squad_member
SRC.HOME=<SRC.TAG.NPCAI.OrigHome>


[ITEMDEF i_squad_member_one]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Member One Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
ATTR=04002
TIMER=1

ON=@Timer
TIMER=5
IF ( (0<LINK.HITS>)<1 )
REMOVE
ELIF !( 0<LINK.TAG.NPCAI.InSquad> )
REMOVE
ENDIF
RETURN 1

[ITEMDEF i_squad_member_two]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Member Two Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
ATTR=04002
TIMER=1

ON=@Timer
TIMER=5
IF ( (0<LINK.HITS>)<1 )
REMOVE
ELIF !( 0<LINK.TAG.NPCAI.InSquad> )
REMOVE
ENDIF
RETURN 1

[ITEMDEF i_squad_member_three]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Member Three Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
ATTR=04002
TIMER=1

ON=@Timer
TIMER=5
IF ( (0<LINK.HITS>)<1 )
REMOVE
ELIF !( 0<LINK.TAG.NPCAI.InSquad> )
REMOVE
ENDIF
RETURN 1

[ITEMDEF i_squad_member_four]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Member Four Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
ATTR=04002
TIMER=1

ON=@Timer
TIMER=5
IF ( (0<LINK.HITS>)<1 )
REMOVE
ELIF !( 0<LINK.TAG.NPCAI.InSquad> )
REMOVE
ENDIF
RETURN 1

[ITEMDEF i_squad_member_five]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Member Five Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
ATTR=04002
TIMER=1

ON=@Timer
TIMER=5
IF ( (0<LINK.HITS>)<1 )
REMOVE
ELIF !( 0<LINK.TAG.NPCAI.InSquad> )
REMOVE
ENDIF
RETURN 1

[ITEMDEF i_squad_member_mem]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Member Memory

ON=@Equip
SRC.TAG.NPCAI.InSquad=1
SRC.TAG.NPCAI.OAlly=<SRC.TAG.NPCAI.Ally>
SRC.TAG.NPCAI.OEnemy=<SRC.TAG.NPCAI.Enemy>
SRC.TAG.NPCAI.Ally=<LINK.TAG.NPCAI.Ally>
SRC.TAG.NPCAI.Enemy=<LINK.TAG.NPCAI.Enemy>
SRC.EVENTS +e_squad_member
ATTR=04002
TIMER=1

ON=@Timer
TIMERD={20 60} //Randomized so that healers wouldn't double up on spells as much
IF !( 0<LINK.HITS> )
REMOVE
ELIF !( 0<LINK.FINDID(i_squad_ld_mem)> )
REMOVE
ELSE
CONT.HOME=<LINK.P>
CONT.HOMEDIST={0 5}
ENDIF
IF ( ((0<CONT.TAG.NPCAI.FighterType>)==2) || ((0<CONT.TAG.NPCAI.FighterType>)==3) )
HealerSpells
ENDIF
IF ( <MORE2> && (<CONT.FIXACTION>!=(skill_magery)) )
CONT.TAG.NPCAI.TempLink=<LINK>
LINK=<MORE2>
LINK.NEWITEM i_attackcue_mem //Create a memory item to trigger the attack with
LINK.ACT.LINK=<CONT.UID> //Set the link to the target for .ATTACK (Happens to be SRC)
LINK.ACT.CONT=<LINK.UID> //Equip (sort of) the memory item on the spotted NPC
LINK.ACT.REMOVE //Remove memory and trigger @UnEquip
LINK=<CONT.TAG.NPCAI.TempLink>
CONT.TAG.NPCAI.TempLink=
ENDIF
MORE2=0
RETURN 1

ON=@UnEquip
SRC.TAG.NPCAI.InSquad=
SRC.TAG.NPCAI.Ally=<SRC.TAG.NPCAI.OAlly>
SRC.TAG.NPCAI.Enemy=<SRC.TAG.NPCAI.OEnemy>
SRC.TAG.NPCAI.OAlly=
SRC.TAG.NPCAI.OEnemy=
SRC.EVENTS -e_squad_member
SRC.HOME=<SRC.TAG.NPCAI.OrigHome>
SRC.HOMEDIST=5


[ITEMDEF i_squad_assignment_mem]
ID=i_memory
TYPE=t_eq_script
NAME=Squad Assignment Memory Item

ON=@Create
ATTR=04002
TIMER=1

ON=@UnEquip
IF !( <MORE2> )
SRC.NEWITEM i_squad_ld_mem
SRC.ACT.LINK=<LINK>
SRC.ACT.EQUIP
ELIF ( <MORE2><6 )
SRC.NEWITEM i_squad_member_mem
SRC.ACT.LINK=<LINK>
SRC.ACT.EQUIP
ELIF ( <MORE2>==6 )
IF !( 0<SRC.FINDID(i_squad_member_one)> )
SRC.NEWITEM i_squad_member_one
ELIF !( 0<SRC.FINDID(i_squad_member_two)> )
SRC.NEWITEM i_squad_member_two
ELIF !( 0<SRC.FINDID(i_squad_member_three)> )
SRC.NEWITEM i_squad_member_three
ELIF !( 0<SRC.FINDID(i_squad_member_four)> )
SRC.NEWITEM i_squad_member_four
ELIF !( 0<SRC.FINDID(i_squad_member_five)> )
SRC.NEWITEM i_squad_member_five
ENDIF
SRC.ACT.LINK=<LINK>
SRC.ACT.EQUIP
ENDIF


[FUNCTION SquadTest]
IF !( 0<SRC.TAG.NPCAI.InSquad> ) //If I am not in a squad
IF !( 0<SRC.ACT.LINK.TAG.NPCAI.InSquad> ) //If target is not in a squad
IF ( ((0<SRC.ACT.LINK.TAG.NPCAI.Rank>)>(-5)) )
SRC.FormSquad //Start a squad
ENDIF
ENDIF
ELSE //If I am in a squad
IF ( 0<SRC.FINDID(i_squad_ld_mem)> ) //If I'm the leader
IF !( (0<SRC.ACT.LINK.TAG.NPCAI.InSquad>) ) //If target is not in a squad
IF ( ((0<SRC.TAG.NPCAI.Rank>)>=(0<SRC.ACT.LINK.TAG.NPCAI.Rank>)) && ((0<SRC.ACT.LINK.TAG.NPCAI.Rank>)>(-5)) ) //If target's rank is lower than or equal to mine
IF !( (<SRC.FINDID(i_squad_member_one)>) && (<SRC.FINDID(i_squad_member_two)>) && (<SRC.FINDID(i_squad_member_three)>) && (<SRC.FINDID(i_squad_member_four)>) && (<SRC.FINDID(i_squad_member_five)>) )
SRC.TAG.NPCAI.TargSquadMem=<SRC.ACT.LINK.UID> //Temporary UID Storage
SRC.ACT.LINK.NEWITEM i_squad_assignment_mem
SRC.ACT.LINK.ACT.LINK=<SRC.UID>
SRC.ACT.LINK.ACT.MORE2=1
SRC.ACT.LINK.ACT.CONT=<SRC.ACT.LINK.UID>
SRC.ACT.LINK.ACT.REMOVE
SRC.NEWITEM i_squad_assignment_mem
SRC.ACT.LINK=<SRC.TAG.NPCAI.TargSquadMem>
SRC.ACT.MORE2=6
SRC.ACT.CONT=<SRC.UID>
SRC.ACT.REMOVE //Remove memory trigger @UnEquip trigger
SRC.TAG.NPCAI.TargSquadMem= //Remove tag
ENDIF
ENDIF
ELIF ( (0<SRC.ACT.LINK.FINDID(i_squad_ld_mem)>) ) //If target is a squad leader
IF ( ((0<SRC.TAG.NPCAI.Rank>)<(0<SRC.ACT.LINK.TAG.NPCAI.Rank>)) )
IF ( ((0<SRC.FINDID(i_squad_ld_mem).LINK>)==0) )
SRC.FINDID(i_squad_ld_mem).LINK=<SRC.ACT.LINK>
ENDIF
ELIF ( ((0<SRC.TAG.NPCAI.Rank>)>(0<SRC.ACT.LINK.TAG.NPCAI.Rank>)) )
IF ( ((0<SRC.ACT.LINK.FINDID(i_squad_ld_mem).LINK>)==0) )
SRC.ACT.LINK.FINDID(i_squad_ld_mem).LINK=<SRC.UID>
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF

[FUNCTION FormSquad]
IF ( (0<SRC.ACT.LINK.TAG.NPCAI.Rank>)<(0<SRC.TAG.NPCAI.RANK>) ) //If target rank is less than SRC rank
SRC.TAG.NPCAI.TargSquadMem=<SRC.ACT.LINK.UID> //Temporary UID Storage
SRC.ACT.LINK.NEWITEM i_squad_assignment_mem
SRC.ACT.LINK.ACT.LINK=<SRC.UID>
SRC.ACT.LINK.ACT.MORE2=1
SRC.ACT.LINK.ACT.CONT=<SRC.ACT.LINK.UID>
SRC.ACT.LINK.ACT.REMOVE
SRC.NEWITEM i_squad_assignment_mem
SRC.ACT.LINK=<SRC.TAG.NPCAI.TargSquadMem>
SRC.ACT.MORE2=6
SRC.ACT.CONT=<SRC.UID>
SRC.ACT.REMOVE //Trigger @UnEquip trigger
SRC.NEWITEM i_squad_assignment_mem
SRC.ACT.LINK=0
SRC.ACT.MORE2=0
SRC.ACT.CONT=<SRC.UID> //Equip the item (Sort of)
SRC.ACT.REMOVE //Trigger @UnEquip trigger
SRC.TAG.NPCAI.TargSquadMem= //Remove tag
ENDIF


[EVENTS e_squad_member]
ON=@GetHit
IF ( <SRC.UID>==<UID> )
RETURN 0
ENDIF
//IF ( (<TAG.NPCAI.Race>==(0<SRC.TAG.NPCAI.Race>)) ) //If the attacker is of the same race
// IF ( <TAG.NPCAI.Race>==(0<FINDID(i_memory).LINK.TAG.NPCAI.Race>) )
// RETURN 0
// ENDIF
//ENDIF
IF ( ((0<SRC.TAG.NPCAI.Ally>)&(0<ACT.LINK.TAG.NPCAI.Race>)) )
RETURN 0
ENDIF
IF !( 0<SRC.HITS> )
RETURN 0
ENDIF
IF ( <SRC.UID>==(<FINDID(i_squad_member_mem).LINK.UID>) )
RETURN 0
ENDIF
IF ( 0<FINDID(i_squad_ld_mem)> )
FINDID(i_squad_ld_mem).MORE2=<SRC.UID> //Was 1
//FINDID(i_squad_ld_mem).LINK=<SRC.UID>
FINDID(i_squad_ld_mem).TIMERD=1
IF ( 0<FINDID(i_squad_member_one)> )
FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<FINDID(i_squad_member_two)> )
FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<FINDID(i_squad_member_three)> )
FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<FINDID(i_squad_member_four)> )
FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<FINDID(i_squad_member_five)> )
FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
ELSE
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).MORE2=<SRC.UID> //Was 1
//FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).LINK=<SRC.UID>
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_ld_mem).TIMERD=1
IF ( 0<FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one)> )
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two)> )
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three)> )
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four)> )
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
IF ( 0<SRC.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five)> )
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).MORE2=<SRC.UID>
FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.FINDID(i_squad_member_mem).TIMERD=1
ENDIF
ENDIF

[FUNCTION SquadDistribute]
IF ( (0<CONT.FINDID(i_squad_ld_mem)>) )
IF ( <CONT.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.UID>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_one).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_one).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_two).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_two).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_three).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_three).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_four).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_four).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_five).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_five).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
ELSE
IF ( <CONT.FINDID(i_squad_member_mem).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_mem).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_one).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_two).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_three).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_four).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
IF ( <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK.HITS> )
VAR.Return=0
TRYP 0 CONT.<ARGS> <CONT.FINDID(i_squad_member_mem).LINK.FINDID(i_squad_member_five).LINK>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ENDIF
ENDIF


[FUNCTION HealerSpells]
IF ( ((0<CONT.FLAGS>)&statf_war) && ((0<CONT.TAG.NPCAI.FighterType>)==3) )
RETURN 1
ENDIF
VAR.Return=0
IF ( (<CONT.FINDID(i_spellbook).MORE1>&(010000000)) && ((<CONT.MANA>)>11) )
SquadDistribute GHealCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(0400) )
SquadDistribute CureCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(08) )
SquadDistribute HealCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(04000) )
SquadDistribute ProtectionCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(010000) )
SquadDistribute BlessCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(08000) )
SquadDistribute StrengthCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(0200) )
SquadDistribute CunningCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(0100) )
SquadDistribute AgilityCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE1>&(040) )
SquadDistribute ReactiveCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE2>&(08) )
SquadDistribute ReflectiveCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF

IF ( <CONT.FINDID(i_spellbook).MORE2>&(0800000) )
SquadDistribute PolymorphCheck
ENDIF
IF ( <VAR.Return> )
RETURN 1
ENDIF


//************************************************** ***************
//** Choose Best Equipment Event
//** By Lerkur
//** Last Edited 08/15/02
//**
//** This script contains:
//** -e_choose_best_equipment Event
//************************************************** ***************

[EVENTS e_choose_best_equipment]
ON=@EnvironChange
IF !( (0<SRC.TAG.NPCAI.NoEquip>) )
IF ( (<EVAL npcai_opt_equipbestarmr>) )
SRC.EQUIPARMOR
ENDIF
IF ( (<EVAL npcai_opt_equipbestwpn>) )
SRC.EQUIPWEAPON
ENDIF
ENDIF
RETURN 0


//This section written by Kell (I believe)

[FUNCTION FIXACTION]
return (<ACTION>|0d2000000)


//************************************************** ***************
//** ReEquip Functions
//** By Lerkur
//** Last Edited 08/05/02
//**
//** This script contains:
//** -CatalogPack
//** -UnEquipInv Function
//** -EquipPack Function
//** -EquipLoop Function
//** -i_reequip_trigger
//** -i_reequip_timer
//************************************************** ***************


[FUNCTION CatalogPack]
IF ( !(0<TAG.NPCAI.EquipmentCount>) )
TAG.NPCAI.EquipmentCount=(<FINDLAYER(1)>+<FINDLAYER(2)>+<FINDLAYER(3)>+<FINDLAYER(4)>+<FINDLAYER(5)>+<FINDLAYER(6)>+<FINDLAYER(7)>+<FINDLAYER(8)>+<FINDLAYER(10)>+<FINDLAYER(12)>+<FINDLAYER(13)>+<FINDLAYER(14)>+<FINDLAYER(17)>+<FINDLAYER(18)>+<FINDLAYER(19)>+<FINDLAYER(20)>+<FINDLAYER(22)>+<FINDLAYER(23)>+<FINDLAYER(24)>)
ENDIF

[FUNCTION UnEquipInv]
FINDLAYER(1).BOUNCE
FINDLAYER(2).BOUNCE
FINDLAYER(3).BOUNCE
FINDLAYER(4).BOUNCE
FINDLAYER(5).BOUNCE
FINDLAYER(6).BOUNCE
FINDLAYER(7).BOUNCE
FINDLAYER(8).BOUNCE
FINDLAYER(10).BOUNCE
FINDLAYER(12).BOUNCE
FINDLAYER(13).BOUNCE
FINDLAYER(14).BOUNCE
FINDLAYER(17).BOUNCE
FINDLAYER(18).BOUNCE
FINDLAYER(19).BOUNCE
FINDLAYER(20).BOUNCE
FINDLAYER(22).BOUNCE
FINDLAYER(23).BOUNCE
FINDLAYER(24).BOUNCE


[FUNCTION EquipPack]
VAR.OldAct=<ACT>
NEWITEM i_reequip_trigger
ACT.CONT=<UID>
ACT.REMOVE
ACT=<VAR.OldAct>

[FUNCTION EquipLoop]
VAR.TempArgs=(<ARGS>-1)
IF ( ((0<ARGS>)<1) )
RETURN 1
ENDIF
VAR.EquipLoop.Item=<EVAL <FINDLAYER(21).FINDCONT(<VAR.EquipLoop.Offset>).UID>>
EQUIP <EVAL <FINDLAYER(21).FINDCONT(<VAR.EquipLoop.Offset>).UID>>
VAR.EquipLoop.NewItem=<EVAL <FINDLAYER(21).FINDCONT(<VAR.EquipLoop.Offset>).UID>>
IF ( ((<EVAL <VAR.EquipLoop.Item>>)==(<EVAL <VAR.EquipLoop.NewItem>>)) && (<EVAL <VAR.EquipLoop.Item>>) )
VAR.EquipLoop.Offset=<EVAL (<VAR.EquipLoop.Offset>+1)>
VAR.TempArgs=<EVAL (<VAR.TempArgs>+1)>
ENDIF
EquipLoop <VAR.TempArgs>

[ITEMDEF i_reequip_trigger]
ID=i_memory
TYPE=t_eq_script
NAME=ReEquip Trigger

ON=@UnEquip
SRC.NEWITEM i_reequip_timer
SRC.ACT.EQUIP

[ITEMDEF i_reequip_timer]
ID=i_memory
TYPE=t_eq_script
NAME=ReEquip Timer

ON=@Equip
ATTR=04002
TIMERD=1

ON=@UnEquip
VAR.EquipLoop.Offset=0
SRC.EquipLoop <SRC.TAG.NPCAI.EquipmentCount>



//************************************************** ***************
//** Spell Functions
//** By Lerkur
//** Last Edited 07/22/02
//**
//** This script contains:
//** -Event e_inhibit_spells
//** -Event e_fix_debuffs
//** -i_debuff_fix_trigger
//** -i_debuff_fix_timer
//** -SpellFizzle Function
//** -Event e_spell_interrupt
//** -FriendlySpellCheck Function
//**
//************************************************** ***************

[EVENTS e_inhibit_spells]
ON=@SpellCast
IF ( (<ARGN>==4) || (<ARGN>==6) || (<ARGN>==7) || (<ARGN>==9) || (<ARGN>==10) || (<ARGN>==11) || (<ARGN>==15) || (<ARGN>==16) || (<ARGN>==17) || (<ARGN>==25) || (<ARGN>==26) || (<ARGN>==29) || (<ARGN>==35) || (<ARGN>==36) || (<ARGN>==44) || (<ARGN>==56) || (<ARGN>==59) )
SAY
SAY
SAY
RETURN 1
ENDIF
RETURN 0

[EVENTS e_fix_debuffs]
ON=@SpellEffect
IF ( (<ARGN>==1) || (<ARGN>==3) || (<ARGN>==8) || (<ARGN>==27) || (<ARGN>==46) )
VAR.FixDebuffs.OldACT=<ACT>
NEWITEM i_debuff_fix_trigger
ACT.CONT=<UID>
ACT.REMOVE
ACT=<VAR.FixDebuffs.OldACT>
ENDIF
RETURN 0

[ITEMDEF i_debuff_fix_trigger]
ID=i_memory
TYPE=t_eq_script
NAME=Debuff Fix Trigger

ON=@UnEquip
SRC.NEWITEM i_debuff_fix_timer
SRC.ACT.EQUIP

[ITEMDEF i_debuff_fix_timer]
ID=i_memory
TYPE=t_eq_script
NAME=Debuff Fix Timer

ON=@Equip
ATTR=04002
TIMERD=1

ON=@UnEquip
IF ( (<SRC.HITS>)>(<SRC.STR>) )
SRC.HITS=<SRC.STR>
ENDIF
IF ( (<SRC.STAM>)>(<SRC.DEX>) )
SRC.STAM=<SRC.DEX>
ENDIF
IF ( (<SRC.MANA>)>(<SRC.INT>) )
SRC.MANA=<SRC.INT>
ENDIF
RETURN 0

[FUNCTION SpellFizzle]
EFFECT 3,03735,1,16,0 //Fizzle effect
SOUND 05c //Fizzle noise
FLAGS=(<FLAGS>&~statf_freeze) //Was statf_stone
TAG.NPCAI.Target=
TAG.NPCAI.SpellStop=

[EVENTS e_spell_interrupt]
ON=@GetHit
TAG.NPCAI.SpellStop=1
FLAGS=(<FLAGS>&~statf_freeze) //Was statf_stone

[FUNCTION FriendlySpellCheck]
IF ( ((0<FLAGS>)&statf_war) && ((0<TAG.NPCAI.FighterType>)==3) )
RETURN 1
ENDIF
VAR.Return=0
GHealCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
CureCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
HealCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ProtectionCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
BlessCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
StrengthCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
CunningCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
AgilityCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ReactiveCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
ReflectiveCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF
PolymorphCheck <ARGS>
IF ( <VAR.Return> )
RETURN 1
ENDIF

//************************************************** ***************
//** Spell Cast Items
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -i_spellcast_trigger
//** -i_spellcast_mem
//************************************************** ***************

[ITEMDEF i_spellcast_trigger]
ID=i_memory
TYPE=t_eq_script
NAME=Spell Cast Trigger

ON=@UnEquip
ATTR=04002
TIMER=1
LINK=<SRC.TAG.NPCAI.Target>
IF !( <SRC.FINDID(i_spellcast_mem)> )
IF !( (0<LINK.CanSee>) && (0<LINK.CanSeeLOS>) )
SRC.TAG.NPCAI.Target=
VAR.LOSCheck=1
RETURN 0
ENDIF
SRC.NEWITEM i_spellcast_mem
SRC.ACT.MORE2=<MORE2>
SRC.ACT.EQUIP
ENDIF

[ITEMDEF i_spellcast_mem]
ID=i_memory
TYPE=t_eq_script
NAME=Spell Cast Memory

ON=@Equip
ATTR=04002
TIMER=1
LINK=<SRC.TAG.NPCAI.Target>
IF !( (0<LINK.CanSee>) && (0<LINK.CanSeeLOS>) )
MORE2=0
SRC.TAG.NPCAI.Target=
SRC.TAG.NPCAI.SpellStop=
REMOVE
RETURN 0
ENDIF
AMOUNT=3
DOSWITCH <MORE2>
RETURN 0
SAY 1
SAY 2
SAY 3
AMOUNT=1
SAY 5
SAY 6
AMOUNT=1
SAY 8
AMOUNT=2
AMOUNT=2
AMOUNT=2
SAY 12
SAY 13
SAY 14
AMOUNT=2
AMOUNT=2
AMOUNT=3
SAY 18
SAY 19
SAY 20
SAY 21
SAY 22
SAY 23
SAY 24
SAY 25
SAY 26
SAY 27
SAY 28
AMOUNT=3
SAY 30
SAY 31
SAY 32
SAY 33
SAY 34
SAY 35
AMOUNT=4
SAY 37
SAY 38
SAY 39
SAY 40
SAY 41
SAY 42
SAY 43
SAY 44
SAY 45
SAY 46
SAY 47
SAY 48
SAY 49
SAY 50
SAY 51
SAY 52
SAY 53
SAY 54
SAY 55
AMOUNT=20
SAY 57
SAY 58
SAY 59
SAY 60
SAY 61
SAY 62
SAY 63
SAY 64
SAY 65
SAY 66
SAY 67
SAY 68
SAY 69
SAY 70
ENDDO
IF ( (<SRC.BODY>==c_man) || (<SRC.BODY>==c_woman) || (<SRC.BODY>==c_orc) )
DOSWITCH <MORE2>
SAY
SRC.SAY Uus Jux
SRC.SAY In Mani Ylem
SRC.SAY Rel Wis
SRC.SAY In Mani
SRC.SAY In Por Ylem
SRC.SAY In Lor
SRC.SAY Flam Sanct
SRC.SAY Des Mani
SRC.SAY Ex Uus
SRC.SAY Uus Wis
SRC.SAY An Nox
SRC.SAY An Mani
SRC.SAY In Jux
SRC.SAY An Jux
SRC.SAY Uus Sanct
SRC.SAY Uus Mani
SRC.SAY Rel Sanct
SRC.SAY Vas Flam
SRC.SAY An Por
SRC.SAY In Nox
SRC.SAY Ort Por Ylem
SRC.SAY Rel Por
SRC.SAY Ex Por
SRC.SAY In Sanct Ylem
SRC.SAY Vas An Nox
SRC.SAY Vas Uus Sanct
SRC.SAY Des Sanct
SRC.SAY In Flam Grav
SRC.SAY In Vas Mani
SRC.SAY Por Ort Grav
SRC.SAY Ort Rel
SRC.SAY Kal Ort Por
SRC.SAY In Hur Jux Ylem
SRC.SAY An Grav
SRC.SAY Kal In Ex
SRC.SAY In Jux Sanct
SRC.SAY Por Corp Wis
SRC.SAY An Ex Por
SRC.SAY In Nox Grav
SRC.SAY Kal Xen
SRC.SAY An Ort
SRC.SAY Corp Por
SRC.SAY Vas Ort Flam
SRC.SAY An Lor Xen
SRC.SAY Kal Por Ylem
SRC.SAY Vas Des Sanct
SRC.SAY In Ex Grav
SRC.SAY Wis Quas
SRC.SAY Vas Ort Grav
SRC.SAY In Sanct Grav
SRC.SAY Kal Vas Flam
SRC.SAY Vas Rel Por
SRC.SAY Ort Sanct
SRC.SAY Vas An Ort
SRC.SAY Flam Kal Des Ylem
SRC.SAY Vas Ylem Rel
SRC.SAY In Vas Por
SRC.SAY Vas Corp Por
SRC.SAY An Corp
SRC.SAY Kal Vas Xen Hur
SRC.SAY Kal Vas Xen Corp
SRC.SAY Kal Vas Xen Ylem
SRC.SAY Kal Vas Xen Flam
SRC.SAY Kal Vas Xen An Flam
SRC.SAY Kal Nox Mani
SRC.SAY In An Mani Grav
SRC.SAY In Corp Sanct Ylem
SRC.SAY In Lor
SRC.SAY Vas Flam Por
SRC.SAY Wis Nox
ENDDO
ENDIF
SRC.ANIM 010 //Spell casting animation
SRC.EVENTS +e_spell_interrupt
SRC.FLAGS=(<SRC.FLAGS>|statf_freeze) //Was statf_stone

ON=@Timer
IF !( (0<CONT.TAG.NPCAI.SpellStop>) )
AMOUNT=(<AMOUNT>+(-1))
IF ( <AMOUNT>==0 )
RETURN 0
ELSE
CONT.ANIM 010 //Spell casting animation
TIMER=1
RETURN 1
ENDIF
ELSE
REMOVE
ENDIF


ON=@UnEquip
SRC.EVENTS -e_spell_interrupt
IF ( (0<SRC.TAG.NPCAI.SpellStop>) )
SRC.SpellFizzle
RETURN 0
ENDIF
LINK=<SRC.TAG.NPCAI.Target>
IF ( (0<LINK.CanSee>) && (0<LINK.CanSeeLOS>) )
DOSWITCH <MORE2>
SAY
SAY 1
SAY 2
SAY 3
SpellHealCast
SAY 5
SAY 6
SpellReactiveCast
SAY 8
SpellAgilityCast
SpellCunningCast
SpellCureCast
SAY 12
SAY 13
SAY 14
SpellProtectionCast
SpellStrengthCast
SpellBlessCast
SAY 18
SAY 19
SAY 20
SAY 21
SAY 22
SAY 23
SAY 24
SAY 25
SAY 26
SAY 27
SAY 28
SpellGHealCast
SAY 30
SAY 31
SAY 32
SAY 33
SAY 34
SAY 35
SpellReflectiveCast
SAY 37
SAY 38
SAY 39
SAY 40
SAY 41
SAY 42
SAY 43
SAY 44
SAY 45
SAY 46
SAY 47
SAY 48
SAY 49
SAY 50
SAY 51
SAY 52
SAY 53
SAY 54
SAY 55
SpellPolymorphCast
SAY 57
SAY 58
SAY 59
SAY 60
SAY 61
SAY 62
SAY 63
SAY 64
SAY 65
SAY 66
SAY 67
SAY 68
SAY 69
SAY 70
ENDDO
ELIF ( <MORE2> )
SRC.SpellFizzle
RETURN 0
ENDIF
SRC.FLAGS=(<SRC.FLAGS>&~statf_freeze) //Was statf_stone
SRC.UPDATE


//************************************************** ***************
//** Spell Agility
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -AgilityCheck Function
//** -SpellAgilityInit Function
//** -SpellAgilityCast Function
//************************************************** ***************

[FUNCTION AgilityCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(0100)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_bless)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_strength)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_cunning)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_agility)>)==0) && (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellAgilityInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellAgilityInit]
IF ( ((0<MANA>)>=6) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=9
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellAgilityCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=6) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-6)) //Consume 6 mana
LINK.SPELLEFFECT 9,((<CONT.MAGERY>)+(<CONT.ANATOMY>))
ENDIF


//************************************************** ***************
//** Spell Bless
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -BlessCheck Function
//** -SpellBlessInit Function
//** -SpellBlessCast Function
//************************************************** ***************

[FUNCTION BlessCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(010000)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_bless)>)==0) && (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellBlessInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellBlessInit]
IF ( ((0<MANA>)>=9) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=17
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellBlessCast]
IF !( 0<CONT.TAG.NPCAI.SpellStop> )
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=9) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-9)) //Consume 9 mana
LINK.SPELLEFFECT 17,((<CONT.MAGERY>)+(<CONT.EvaluatingIntel>)+(<CONT.ANATOMY>))
RETURN 0
ENDIF
ENDIF
CONT.SpellFizzle

//************************************************** ***************
//** Spell Cunning
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -CunningCheck Function
//** -SpellCunningInit Function
//** -SpellCunningCast Function
//************************************************** ***************

[FUNCTION CunningCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(0200)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_bless)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_strength)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_cunning)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_agility)>)==0) && (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellCunningInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellCunningInit]
IF ( ((0<MANA>)>=6) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=10
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellCunningCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=6) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-6)) //Consume 6 mana
LINK.SPELLEFFECT 10,((<CONT.MAGERY>)+(<CONT.EvaluatingIntel>))
ENDIF


//************************************************** ***************
//** Spell Cure
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -CureCheck Function
//** -SpellCureInit Function
//** -SpellCureCast Function
//************************************************** ***************

[FUNCTION CureCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(0400)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( ((0<FINDID(i_spellbook).LINK.FLAGS>)&statf_poisoned) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellCureInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellCureInit]
IF ( ((0<MANA>)>=6) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=11
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellCureCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=6) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-6)) //Consume 6 mana
LINK.SPELLEFFECT 11,((<CONT.MAGERY>)+(<CONT.HEALING>)+(<CONT.ANATOMY>))
ENDIF


//************************************************** ***************
//** Spell Greater Heal
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -GHealCheck Function
//** -SpellGHealInit Function
//** -SpellGHealCast Function
//************************************************** ***************

[FUNCTION GHealCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(010000000)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( (0<FINDID(i_spellbook).LINK.HITS>)<(((0<FINDID(i_spellbook).LINK.STR>)*3)/4) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellGHealInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellGHealInit]
IF ( ((0<MANA>)>=11) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=29
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellGHealCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=11) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-11)) //Consume 11 mana
LINK.SPELLEFFECT 29,((<CONT.MAGERY>)+(<CONT.HEALING>)+(<CONT.ANATOMY>))
IF ( (<LINK.HITS>)>(<LINK.STR>) )
LINK.HITS=<LINK.STR>
ENDIF
ENDIF

//************************************************** ***************
//** Spell Minor Heal
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -HealCheck Function
//** -SpellHealInit Function
//** -SpellHealCast Function
//************************************************** ***************

[FUNCTION HealCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(08)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( (0<FINDID(i_spellbook).LINK.HITS>)<(0<FINDID(i_spellbook).LINK.STR>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellHealInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellHealInit]
IF ( ((0<MANA>)>4) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=4
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellHealCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>4) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-4)) //Consume 4 mana
LINK.SPELLEFFECT 4,((<CONT.MAGERY>)+(<CONT.HEALING>)+(<CONT.ANATOMY>))
IF ( (<LINK.HITS>)>(<LINK.STR>) )
LINK.HITS=<LINK.STR>
ENDIF
ENDIF


//************************************************** ***************
//** Spell Polymorph
//** By Lerkur
//** Last Edited 07/09/02
//**
//** This script contains:
//** -PolymorphCheck Function
//** -SpellPolymorphInit Function
//** -SpellPolymorphCast Function
//** -Events e_polymorphed
//************************************************** ***************


[FUNCTION PolymorphCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE2>&(0800000)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=(0<ARGS>)
IF ( ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_polymorph)>)==0) && ((0<UID>)==(0<ARGS>)) )
IF !( (<FLAGS>&statf_war) )
IF ( (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=(0<ARGS>)
ENDIF
SpellPolymorphInit
VAR.Return=1
ENDIF
ENDIF
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellPolymorphInit]
IF ( ((0<MANA>)>40) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=56
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellPolymorphCast]
IF !( 0<CONT.TAG.NPCAI.SpellStop> )
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>40) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-40)) //Consume 40 mana
LINK.SPELLEFFECT 56,((<CONT.MAGERY>)+(<CONT.ANIMALLORE>))
//LINK.FINDID(i_rune_polymorph).TIMER=300
LINK.TAG.NPCAI.OFighterType=<LINK.TAG.NPCAI.FighterType>
LINK.TAG.NPCAI.FighterType=0
LINK.TAG.NPCAI.OWrestling=<LINK.WRESTLING>
LINK.TAG.NPCAI.OTactics=<LINK.TACTICS>
LINK.TAG.NPCAI.OInt=<LINK.INT>
LINK.EVENTS +e_polymorphed
LINK.CatalogPack
IF ( (<CONT.ID>==c_h_woodelf_druid) )
LINK.STR=((<LINK.STR>)+(-(<LINK.FINDID(i_rune_polymorph).MORE1L>)))
LINK.DEX=((<LINK.DEX>)+(-(<LINK.FINDID(i_rune_polymorph).MORE1H>)))
LINK.INT=0
LINK.MANA=0
LINK.FINDID(i_rune_polymorph).MORE1=00
LINK.FINDID(i_rune_polymorph).MORE1L=(200)
LINK.FINDID(i_rune_polymorph).MORE1H=(-75)
LINK.STR=((<LINK.STR>)+(200))
LINK.DEX=((<LINK.DEX>)+(-75))
LINK.WRESTLING={120.0 140.0}
LINK.TACTICS={175.0 200.0}
LINK.BODY=c_bear_druid
ENDIF
IF ( (<CONT.ID>==c_h_frostelf_shaman) )
LINK.STR=((<LINK.STR>)+(-(<LINK.FINDID(i_rune_polymorph).MORE1L>)))
LINK.DEX=((<LINK.DEX>)+(-(<LINK.FINDID(i_rune_polymorph).MORE1H>)))
LINK.INT=0
LINK.MANA=0
LINK.FINDID(i_rune_polymorph).MORE1=00
LINK.FINDID(i_rune_polymorph).MORE1L=(100)
LINK.FINDID(i_rune_polymorph).MORE1H=(50)
LINK.STR=((<LINK.STR>)+(100))
LINK.DEX=((<LINK.DEX>)+(50))
LINK.WRESTLING={120.0 140.0}
LINK.TACTICS={120.0 140.0}
LINK.BODY=c_m_elem_ice
ENDIF
LINK.HITS=<LINK.STR>
LINK.STAM=<LINK.DEX>
RETURN 0
ENDIF
ENDIF
CONT.SpellFizzle

[EVENTS e_polymorphed]
ON=@ItemUnEquip
IF ( <ACT.ID>==020b7 ) //ID of i_rune_polymorph
TAG.NPCAI.FighterType=<TAG.NPCAI.OFighterType>
TAG.NPCAI.OFighterType=
INT=<TAG.NPCAI.OInt>
TAG.NPCAI.OInt=
WRESTLING=<TAG.NPCAI.OWrestling>
TAG.NPCAI.OWrestling=
TACTICS=<TAG.NPCAI.OTactics>
TAG.NPCAI.OTactics=
SRC.EquipPack
EVENTS -e_polymorphed
ENDIF


//************************************************** ***************
//** Spell Protection
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -ProtectionCheck Function
//** -SpellProtectionInit Function
//** -SpellProtectionCast Function
//************************************************** ***************

[FUNCTION ProtectionCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(04000)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_protection)>)==0) && (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellProtectionInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellProtectionInit]
IF ( ((0<MANA>)>=6) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=15
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellProtectionCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=6) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-6)) //Consume 6 mana
LINK.SPELLEFFECT 15,((<CONT.MAGERY>)+(<CONT.ANATOMY>))
ENDIF


//************************************************** ***************
//** Spell Reactive Armor
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -ReactiveCheck Function
//** -SpellReactiveInit Function
//** -SpellReactiveCast Function
//************************************************** ***************

[FUNCTION ReactiveCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(040)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF !( ((0<FINDID(i_spellbook).LINK.FLAGS>)&statf_reactive) )
IF ( (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellReactiveInit
VAR.Return=1
ENDIF
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellReactiveInit]
IF ( ((0<MANA>)>=4) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=7
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellReactiveCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=4) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-4)) //Consume 4 mana
LINK.SPELLEFFECT 7,(<CONT.MAGERY>/2)
ENDIF


//************************************************** ***************
//** Spell Magic Reflection
//** By Lerkur
//** Last Edited 06/21/02
//**
//** This script contains:
//** -ReflectiveCheck Function
//** -SpellReflectiveInit Function
//** -SpellReflectiveCast Function
//************************************************** ***************

[FUNCTION ReflectiveCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE2>&(08)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF !( ((0<FINDID(i_spellbook).LINK.FLAGS>)&statf_reflection) )
IF ( (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellReflectiveInit
VAR.Return=1
ENDIF
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellReflectiveInit]
IF ( ((0<MANA>)>=14) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=36
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellReflectiveCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=14) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-14)) //Consume 14 mana
LINK.SPELLEFFECT 36,(<CONT.MAGERY>)
ENDIF


//************************************************** ***************
//** Spell Strength
//** By Lerkur
//** Last Edited 05/21/02
//**
//** This script contains:
//** -StrengthCheck Function
//** -SpellStrengthInit Function
//** -SpellStrengthCast Function
//************************************************** ***************

[FUNCTION StrengthCheck]
VAR.LOSCheck=0
IF ( (0<FINDID(i_spellbook).MORE1>&(08000)) )
TAG.NPCAI.TempLink=<FINDID(i_spellbook).LINK>
FINDID(i_spellbook).LINK=<ARGS>
IF ( ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_bless)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_strength)>)==0) &&; ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_cunning)>)==0) && ((0<FINDID(i_spellbook).LINK.FINDID(i_rune_agility)>)==0) && (0<FINDID(i_spellbook).LINK.HITS>) )
IF !( (0<TAG.NPCAI.Target>) )
TAG.NPCAI.Target=<ARGS>
ENDIF
SpellStrengthInit
VAR.Return=1
ENDIF
FINDID(i_spellbook).LINK=<TAG.NPCAI.TempLink>
TAG.NPCAI.TempLink=
ENDIF
IF ( (0<VAR.LOSCheck>) )
VAR.Return=0
ENDIF

[FUNCTION SpellStrengthInit]
IF ( ((0<MANA>)>=6) && (<FIXACTION>!=(skill_magery)) )
NEWITEM i_spellcast_trigger
ACT.MORE2=16
ACT.CONT=<UID>
ACT.REMOVE //Remove memory and trigger @UnEquip
ELSE
SYSMESSAGE Not enough mana!
ENDIF

[FUNCTION SpellStrengthCast]
IF ( (0<CONT.TAG.NPCAI.Target>) && ((0<CONT.MANA>)>=6) )
LINK=<CONT.TAG.NPCAI.Target>
CONT.TAG.NPCAI.Target=
CONT.MANA=(<CONT.MANA>+(-6)) //Consume 6 mana
LINK.SPELLEFFECT 16,((<CONT.MAGERY>)+(<CONT.ANATOMY>))
ENDIF



[EOF]